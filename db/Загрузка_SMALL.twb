<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook original-version='18.1' source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='qryOutput_03_Weighted (qryOutput_03_Weighted)' inline='true' name='federated.1ijsg0d07xmi3p14wuxpc1nn2nxr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='qryOutput_03_Weighted' name='excel-direct.08x751p12dt4td1b41dtl1s8km5e'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/___DemosVoice___/qryOutput_03_Weighted.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08x751p12dt4td1b41dtl1s8km5e' name='qryOutput_03_Weighted' table='[qryOutput_03_Weighted$]' type='table'>
          <columns gridOrigin='A1:L6:no:A1:L6:0' header='yes' outcome='6'>
            <column datatype='string' name='Region' ordinal='0' />
            <column datatype='string' name='CountyName' ordinal='1' />
            <column datatype='real' name='CountyLat' ordinal='2' />
            <column datatype='real' name='CountyLong' ordinal='3' />
            <column datatype='string' name='PropSubject' ordinal='4' />
            <column datatype='string' name='PropName' ordinal='5' />
            <column datatype='real' name='Sum-comPolarityM' ordinal='6' />
            <column datatype='real' name='Sum-comConfidenceM' ordinal='7' />
            <column datatype='real' name='Sum-comPositiveM' ordinal='8' />
            <column datatype='real' name='Sum-comNeutralM' ordinal='9' />
            <column datatype='real' name='Sum-comNegativeM' ordinal='10' />
            <column datatype='integer' name='prop_likes' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CountyName]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>CountyName</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyLat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CountyLat]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>CountyLat</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountyLong</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CountyLong]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>CountyLong</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PropSubject</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PropSubject]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>PropSubject</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PropName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[PropName]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>PropName</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LRU_RRU_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum-comPolarityM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum-comPolarityM]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Sum-comPolarityM</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum-comConfidenceM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum-comConfidenceM]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Sum-comConfidenceM</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum-comPositiveM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum-comPositiveM]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Sum-comPositiveM</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum-comNeutralM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum-comNeutralM]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Sum-comNeutralM</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum-comNegativeM</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sum-comNegativeM]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>Sum-comNegativeM</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prop_likes</remote-name>
            <remote-type>20</remote-type>
            <local-name>[prop_likes]</local-name>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias>prop_likes</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[qryOutput_03_Weighted]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>5</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L6:no:A1:L6:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:prop_likes:qk]&quot;' value='Лайков' />
          <alias key='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comNegativeM:qk]&quot;' value='Негативно' />
          <alias key='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]&quot;' value='Позитивно' />
        </aliases>
      </column>
      <column datatype='string' name='[CountyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[PropName]' role='dimension' type='nominal' />
      <column datatype='string' name='[PropSubject]' role='dimension' type='nominal' />
      <column datatype='real' name='[Sum-comConfidenceM]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sum-comNegativeM]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sum-comNeutralM]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sum-comPolarityM]' role='measure' type='quantitative' />
      <column datatype='real' name='[Sum-comPositiveM]' role='measure' type='quantitative' />
      <column datatype='integer' name='[prop_likes]' role='measure' type='quantitative' />
      <column-instance column='[PropName]' derivation='None' name='[none:PropName:nk]' pivot='key' type='nominal' />
      <column-instance column='[PropSubject]' derivation='None' name='[none:PropSubject:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sum-comConfidenceM]' derivation='Sum' name='[sum:Sum-comConfidenceM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum-comNegativeM]' derivation='Sum' name='[sum:Sum-comNegativeM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum-comNeutralM]' derivation='Sum' name='[sum:Sum-comNeutralM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum-comPolarityM]' derivation='Sum' name='[sum:Sum-comPolarityM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum-comPositiveM]' derivation='Sum' name='[sum:Sum-comPositiveM:qk]' pivot='key' type='quantitative' />
      <column-instance column='[prop_likes]' derivation='Sum' name='[sum:prop_likes:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.346473' measure-ordering='alphabetic' measure-percentage='0.653527' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comConfidenceM:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPolarityM:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comNeutralM:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:prop_likes:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comNegativeM:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[usr:Calculation_582371740891799552:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PropName:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Установка камеры за ул. Петрова д. 1&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Озеленение перед ул. Зеленая д. 22&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Установка камеры около ул. Петрова д. 1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Установка камеры возле ул. Зеленая д. 22&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Установка камеры возле ул. Петрова д. 22&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Установка камеры около ул. Петрова д. 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Установка камеры возле ул. Садовая д. 1&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Установка камеры за ул. Петрова д. 22&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Установка камеры возле ул. Садовая д. 31&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Установка камеры перед ул. Ленина д. 1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Установка лежачего полицейского на Зеленой, 13&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Озеленение около ул. Зеленая д. 5&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Установка камеры видеонаблюдения около клуба по Садовой, 18&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Установка камеры перед ул. Петрова д. 31&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Установка камеры за ул. Ленина д. 5&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Установка камеры перед ул. Ленина д. 31&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Установка камеры за ул. Ленина д. 22&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Установка камеры перед ул. Ленина д. 22&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Установка камеры перед ул. Петрова д. 5&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Установка лежачего полицейского на Зеленой, 2&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Озеленение за ул. Ленина д. 31&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Установка камеры около ул. Ленина д. 31&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Установка камеры за ул. Петрова д. 31&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Установка камеры возле ул. Петрова д. 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Установка камеры за ул. Ленина д. 31&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Установка камеры возле ул. Зеленая д. 31&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Установка камеры около ул. Петрова д. 22&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Установка камеры перед ул. Петрова д. 22&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Установка камеры за ул. Ленина д. 1&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Установка камеры около ул. Ленина д. 22&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Установка камеры возле ул. Петрова д. 1&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Установка камеры около ул. Петрова д. 31&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:PropSubject:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Безопасность дворов&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Благоустройство территорий&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Оказание коммунальных услуг и ЖКХ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Общее&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Общественный транспорт&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Досуг&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Благоустройство домов и прилегающих территорий&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Russia&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Оценка инициатив</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='qryOutput_03_Weighted (qryOutput_03_Weighted)' name='federated.1ijsg0d07xmi3p14wuxpc1nn2nxr' />
          </datasources>
          <datasource-dependencies datasource='federated.1ijsg0d07xmi3p14wuxpc1nn2nxr'>
            <column datatype='string' name='[CountyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[PropName]' role='dimension' type='nominal' />
            <column datatype='string' name='[PropSubject]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sum-comNegativeM]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum-comPositiveM]' role='measure' type='quantitative' />
            <column-instance column='[CountyName]' derivation='None' name='[none:CountyName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PropName]' derivation='None' name='[none:PropName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PropSubject]' derivation='None' name='[none:PropSubject:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[prop_likes]' role='measure' type='quantitative' />
            <column-instance column='[Sum-comNegativeM]' derivation='Sum' name='[sum:Sum-comNegativeM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sum-comPositiveM]' derivation='Sum' name='[sum:Sum-comPositiveM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[prop_likes]' derivation='Sum' name='[sum:prop_likes:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:prop_likes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comNegativeM:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:prop_likes:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]&quot;</bucket>
              <bucket>&quot;[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comNegativeM:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:CountyName:nk]' member='&quot;Абашевское сельское поселение Чебоксарского района&quot;' />
              <groupfilter function='member' level='[none:CountyName:nk]' member='&quot;Ишакское сельское поселение Чебоксарского района&quot;' />
              <groupfilter function='member' level='[none:CountyName:nk]' member='&quot;Ишлейское сельское поселение Чебоксарского района&quot;' />
              <groupfilter function='member' level='[none:CountyName:nk]' member='&quot;Лапсарское сельское поселение Чебоксарского района&quot;' />
              <groupfilter function='member' level='[none:CountyName:nk]' member='&quot;Сирмапосинское сельское поселение Чебоксарского района&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PropSubject:nk]' member='&quot;Безопасность дворов&quot;' />
              <groupfilter function='member' level='[none:PropSubject:nk]' member='&quot;Благоустройство домов и прилегающих территорий&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]</column>
            <column>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]</column>
            <column>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]' value='75' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk]' value='384' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk] / [federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk])</rows>
        <cols>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C50E7929-225B-40E8-9CF3-22AF1B9CE7C4}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E9F688F1-7F42-4A73-AB14-501D3BE2A99F}' />
    </worksheet>
    <worksheet name='Цвет_на_цвет'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Оценка инициатив                                                                                                         (- /  +)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='qryOutput_03_Weighted (qryOutput_03_Weighted)' name='federated.1ijsg0d07xmi3p14wuxpc1nn2nxr' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ijsg0d07xmi3p14wuxpc1nn2nxr'>
            <column caption='-SUM([Sum-comNegativeM])' datatype='real' name='[Calculation_582371740891799552]' role='measure' type='quantitative' user:unnamed='Цвет_на_цвет'>
              <calculation class='tableau' formula='-SUM([Sum-comNegativeM])' />
            </column>
            <column datatype='string' name='[CountyName]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='string' name='[PropName]' role='dimension' type='nominal' />
            <column datatype='string' name='[PropSubject]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sum-comNegativeM]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sum-comPositiveM]' role='measure' type='quantitative' />
            <column-instance column='[CountyName]' derivation='None' name='[none:CountyName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PropName]' derivation='None' name='[none:PropName:nk]' pivot='key' type='nominal' />
            <column-instance column='[PropSubject]' derivation='None' name='[none:PropSubject:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sum-comPositiveM]' derivation='Sum' name='[sum:Sum-comPositiveM:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_582371740891799552]' derivation='User' name='[usr:Calculation_582371740891799552:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]'>
            <groupfilter function='level-members' level='[none:CountyName:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:PropSubject:nk]' member='&quot;Благоустройство территорий&quot;' />
              <groupfilter function='member' level='[none:PropSubject:nk]' member='&quot;Общее&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]</column>
            <column>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[usr:Calculation_582371740891799552:qk]' scope='cols' value='false' />
            <format attr='display' class='0' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk]' value='468' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[usr:Calculation_582371740891799552:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk]</rows>
        <cols>([federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[usr:Calculation_582371740891799552:qk] + [federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[sum:Sum-comPositiveM:qk])</cols>
      </table>
      <simple-id uuid='{AB72AE06-5142-4848-B160-FF71755A0216}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6961FEDF-7AC7-4B49-943B-D7132BBAA965}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='256'>
            <card param='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]' type='filter' />
            <card param='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[:Measure Names]</field>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]</field>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropName:nk]</field>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC3571B7-6C9A-4F23-BC94-F8C02C16774D}' />
    </window>
    <window class='worksheet' maximized='true' name='Цвет_на_цвет'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='226'>
            <card param='[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:CountyName:nk]</field>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[none:PropSubject:nk]</field>
            <field>[federated.1ijsg0d07xmi3p14wuxpc1nn2nxr].[usr:Calculation_582371740891799552:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2BCFB6CF-DE00-42F0-A88B-BC4A4A714994}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Цвет_на_цвет' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
