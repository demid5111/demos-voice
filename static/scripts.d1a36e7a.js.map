{"version":3,"sources":["scripts/navbar.ts","scripts/button.ts","scripts/sendMessage.ts","scripts/list.ts","node_modules/mithril/mithril.js","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.d1a36e7a.js","sourceRoot":"..\\ui","sourcesContent":["import { m } from \".\";\r\n\r\nexport const Navbar = () => m(\r\n    \"nav.uk-navbar-container.uk-margin\", \r\n    m(\r\n        \".uk-navbar-left\",\r\n        m(\r\n            \"ul.uk-navbar-nav\",\r\n            m(\r\n                \".uk-container\",\r\n                m(\r\n                    \".uk-margin-top.uk-margin\",\r\n                    \"\"\r\n                )\r\n            )\r\n        )\r\n    )\r\n);","import { m } from \".\";\r\n\r\nexport const Button = (title: string, callback?: () => void) => \r\n    m(\r\n        \"button.uk-button.uk-button-default\",\r\n        {            \r\n            onclick: callback\r\n        },\r\n        title\r\n    )\r\n\r\nexport const Input = (callback?: (value: string)=> void) => \r\n    m(\r\n        \"input.uk-input.uk-margin-right\",\r\n        {\r\n            type: \"text\",\r\n            oninput: (v) => callback(v.srcElement.value)\r\n        },\r\n    )\r\n","export function sendData(url = '', data = {}, sendMethod?: \"POST\") {\r\n    return fetch(url, {\r\n        method: sendMethod, \r\n        mode: 'cors', \r\n        cache: 'no-cache',\r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', \r\n        referrer: 'no-referrer', \r\n        body: JSON.stringify(data), \r\n    })\r\n        .then(response => response.json()); \r\n}\r\n\r\nexport function getData(url = '', data = {}, sendMethod?: \"GET\") {\r\n    return fetch(url, {\r\n        method: sendMethod, \r\n        mode: 'cors', \r\n        cache: 'no-cache',\r\n        credentials: 'same-origin', \r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        redirect: 'follow', \r\n        referrer: 'no-referrer'\r\n    })\r\n        .then(response => response.json()); \r\n}","import { ListItem, m } from \".\";\r\nimport { Button } from \"./button\";\r\nimport { sendData } from \"./sendMessage\";\r\n\r\nexport const List = (data: ListItem[]) => {\r\n    return m(\r\n        \"ul.uk-list.uk-list-divider.uk-accordion\",\r\n        data.map((x) => {\r\n            return ListItem(x.title, x.id, x.open(), x.description,x.open)\r\n        }\r\n        )\r\n    )\r\n}\r\n\r\nvar ListItem = (title, id ,changeOpen, description ,callback) => {\r\n    return m(\r\n        \"li\",\r\n        {\r\n            class: changeOpen ? \"uk-open\" : \"\",\r\n            onclick: () => {\r\n                callback(!callback());\r\n            }\r\n        },\r\n        m(\"a.uk-accordion-title\", title),\r\n        m(\r\n            \".\",\r\n            {\r\n                class: changeOpen ? \"\" : \"hide\"\r\n            },\r\n            m(\".uk-margin\", description),\r\n            Button(\"Провести анализ\", () => sendData(\"http://localhost:5000/analyze\", {proposalId: id}, \"POST\"))\r\n        )\r\n    )\r\n}\r\n","/* global Promise */\r\n\r\n;(function (global, factory) { // eslint-disable-line\r\n\t\"use strict\"\r\n\t/* eslint-disable no-undef */\r\n\tvar m = factory(global)\r\n\t/*\tSet dependencies when no window for isomorphic compatibility */\r\n\tif(typeof window === \"undefined\") {\r\n\t\tm.deps({\r\n\t\t\tdocument: typeof document !== \"undefined\" ? document : {},\r\n\t\t\tlocation: typeof location !== \"undefined\" ? location : {},\r\n\t\t\tclearTimeout: clearTimeout,\r\n\t\t\tsetTimeout: setTimeout\r\n\t\t})\r\n\t}\r\n\tif (typeof module === \"object\" && module != null && module.exports) {\r\n\t\tmodule.exports = m\r\n\t} else if (typeof define === \"function\" && define.amd) {\r\n\t\tdefine(function () { return m })\r\n\t} else {\r\n\t\tglobal.m = m\r\n\t}\r\n\t/* eslint-enable no-undef */\r\n})(typeof window !== \"undefined\" ? window : this, function factory(global, undefined) { // eslint-disable-line\r\n\t\"use strict\"\r\n\r\n\tm.version = function () {\r\n\t\treturn \"v0.2.8\"\r\n\t}\r\n\r\n\tvar hasOwn = {}.hasOwnProperty\r\n\tvar type = {}.toString\r\n\r\n\tfunction isFunction(object) {\r\n\t\treturn typeof object === \"function\"\r\n\t}\r\n\r\n\tfunction isObject(object) {\r\n\t\treturn type.call(object) === \"[object Object]\"\r\n\t}\r\n\r\n\tfunction isString(object) {\r\n\t\treturn type.call(object) === \"[object String]\"\r\n\t}\r\n\r\n\tvar isArray = Array.isArray || function (object) {\r\n\t\treturn type.call(object) === \"[object Array]\"\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\r\n\tvar voidElements = {\r\n\t\tAREA: 1,\r\n\t\tBASE: 1,\r\n\t\tBR: 1,\r\n\t\tCOL: 1,\r\n\t\tCOMMAND: 1,\r\n\t\tEMBED: 1,\r\n\t\tHR: 1,\r\n\t\tIMG: 1,\r\n\t\tINPUT: 1,\r\n\t\tKEYGEN: 1,\r\n\t\tLINK: 1,\r\n\t\tMETA: 1,\r\n\t\tPARAM: 1,\r\n\t\tSOURCE: 1,\r\n\t\tTRACK: 1,\r\n\t\tWBR: 1\r\n\t}\r\n\r\n\t// caching commonly used variables\r\n\tvar $document, $location, $requestAnimationFrame, $cancelAnimationFrame\r\n\r\n\t// self invoking function needed because of the way mocks work\r\n\tfunction initialize(mock) {\r\n\t\t$document = mock.document\r\n\t\t$location = mock.location\r\n\t\t$cancelAnimationFrame = mock.cancelAnimationFrame || mock.clearTimeout\r\n\t\t$requestAnimationFrame = mock.requestAnimationFrame || mock.setTimeout\r\n\t}\r\n\r\n\t// testing API\r\n\tm.deps = function (mock) {\r\n\t\tinitialize(global = mock || window)\r\n\t\treturn global\r\n\t}\r\n\r\n\tm.deps.factory = m.factory = factory\r\n\r\n\tm.deps(global)\r\n\r\n\t/**\r\n\t * @typedef {String} Tag\r\n\t * A string that looks like -> div.classname#id[param=one][param2=two]\r\n\t * Which describes a DOM node\r\n\t */\r\n\r\n\tfunction parseTagAttrs(cell, tag) {\r\n\t\tvar classes = []\r\n\t\t/* eslint-disable max-len */\r\n\t\tvar parser = /(?:(^|#|\\.)([^#\\.\\[\\]]+))|(\\[(.+?)(?:\\s*=\\s*(\"|'|)((?:\\\\[\"'\\]]|.)*?)\\5)?\\])/g\r\n\t\t/* eslint-enable max-len */\r\n\t\tvar match\r\n\r\n\t\twhile ((match = parser.exec(tag))) {\r\n\t\t\tif (match[1] === \"\" && match[2]) {\r\n\t\t\t\tcell.tag = match[2]\r\n\t\t\t} else if (match[1] === \"#\") {\r\n\t\t\t\tcell.attrs.id = match[2]\r\n\t\t\t} else if (match[1] === \".\") {\r\n\t\t\t\tclasses.push(match[2])\r\n\t\t\t} else if (match[3].charAt(0) === \"[\") { // #1195\r\n\t\t\t\tvar attrValue = match[6]\r\n\t\t\t\tif (attrValue) attrValue = attrValue.replace(/\\\\([\"'])/g, \"$1\")\r\n\t\t\t\tif (match[4] === \"class\") classes.push(attrValue)\r\n\t\t\t\telse cell.attrs[match[4]] = attrValue || true\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn classes\r\n\t}\r\n\r\n\tfunction getVirtualChildren(args, hasAttrs) {\r\n\t\tvar children = hasAttrs ? args.slice(1) : args\r\n\r\n\t\tif (children.length === 1 && isArray(children[0])) {\r\n\t\t\treturn children[0]\r\n\t\t} else {\r\n\t\t\treturn children\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignAttrs(target, attrs, classes) {\r\n\t\tvar classAttr = \"class\" in attrs ? \"class\" : \"className\"\r\n\r\n\t\tfor (var attrName in attrs) {\r\n\t\t\tif (hasOwn.call(attrs, attrName)) {\r\n\t\t\t\tif (attrName === classAttr &&\r\n\t\t\t\t\t\tattrs[attrName] != null &&\r\n\t\t\t\t\t\tattrs[attrName] !== \"\") {\r\n\t\t\t\t\tclasses.push(attrs[attrName])\r\n\t\t\t\t\t// create key in correct iteration order\r\n\t\t\t\t\ttarget[attrName] = \"\"\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget[attrName] = attrs[attrName]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (classes.length) target[classAttr] = classes.join(\" \")\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {Tag} The DOM node tag\r\n\t * @param {Object=[]} optional key-value pairs to be mapped to DOM attrs\r\n\t * @param {...mNode=[]} Zero or more Mithril child nodes. Can be an array,\r\n\t *                      or splat (optional)\r\n\t */\r\n\tfunction m(tag, pairs) {\r\n\t\tvar args = []\r\n\r\n\t\tfor (var i = 1, length = arguments.length; i < length; i++) {\r\n\t\t\targs[i - 1] = arguments[i]\r\n\t\t}\r\n\r\n\t\tif (tag && isFunction(tag.view)) return parameterize(tag, args)\r\n\r\n\t\tif (!isString(tag)) {\r\n\t\t\tthrow new Error(\"selector in m(selector, attrs, children) should \" +\r\n\t\t\t\t\"be a string\")\r\n\t\t}\r\n\r\n\t\tvar hasAttrs = pairs != null && isObject(pairs) &&\r\n\t\t\t!(\"tag\" in pairs || \"view\" in pairs || \"subtree\" in pairs)\r\n\r\n\t\tvar attrs = hasAttrs ? pairs : {}\r\n\t\tvar cell = {\r\n\t\t\ttag: \"div\",\r\n\t\t\tattrs: {},\r\n\t\t\tchildren: getVirtualChildren(args, hasAttrs)\r\n\t\t}\r\n\r\n\t\tassignAttrs(cell.attrs, attrs, parseTagAttrs(cell, tag))\r\n\t\treturn cell\r\n\t}\r\n\r\n\tfunction forEach(list, f) {\r\n\t\tfor (var i = 0; i < list.length && !f(list[i], i++);) {\r\n\t\t\t// function called in condition\r\n\t\t}\r\n\t}\r\n\r\n\tfunction forKeys(list, f) {\r\n\t\tforEach(list, function (attrs, i) {\r\n\t\t\treturn (attrs = attrs && attrs.attrs) &&\r\n\t\t\t\tattrs.key != null &&\r\n\t\t\t\tf(attrs, i)\r\n\t\t})\r\n\t}\r\n\t// This function was causing deopts in Chrome.\r\n\tfunction dataToString(data) {\r\n\t\t// data.toString() might throw or return null if data is the return\r\n\t\t// value of Console.log in some versions of Firefox (behavior depends on\r\n\t\t// version)\r\n\t\ttry {\r\n\t\t\tif (typeof data !== \"boolean\" &&\r\n\t\t\t\t\tdata != null &&\r\n\t\t\t\t\tdata.toString() != null) return data\r\n\t\t} catch (e) {\r\n\t\t\t// silently ignore errors\r\n\t\t}\r\n\t\treturn \"\"\r\n\t}\r\n\r\n\t// This function was causing deopts in Chrome.\r\n\tfunction injectTextNode(parentElement, first, index, data) {\r\n\t\ttry {\r\n\t\t\tinsertNode(parentElement, first, index)\r\n\t\t\tfirst.nodeValue = data\r\n\t\t} catch (e) {\r\n\t\t\t// IE erroneously throws error when appending an empty text node\r\n\t\t\t// after a null\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flatten(list) {\r\n\t\t// recursively flatten array\r\n\t\tfor (var i = 0; i < list.length; i++) {\r\n\t\t\tif (isArray(list[i])) {\r\n\t\t\t\tlist = list.concat.apply([], list)\r\n\t\t\t\t// check current index again and flatten until there are no more\r\n\t\t\t\t// nested arrays at that index\r\n\t\t\t\ti--\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn list\r\n\t}\r\n\r\n\tfunction insertNode(parentElement, node, index) {\r\n\t\tparentElement.insertBefore(node,\r\n\t\t\tparentElement.childNodes[index] || null)\r\n\t}\r\n\r\n\tvar DELETION = 1\r\n\tvar INSERTION = 2\r\n\tvar MOVE = 3\r\n\r\n\tfunction handleKeysDiffer(data, existing, cached, parentElement) {\r\n\t\tforKeys(data, function (key, i) {\r\n\t\t\texisting[key = key.key] = existing[key] ? {\r\n\t\t\t\taction: MOVE,\r\n\t\t\t\tindex: i,\r\n\t\t\t\tfrom: existing[key].index,\r\n\t\t\t\telement: cached.nodes[existing[key].index] ||\r\n\t\t\t\t\t$document.createElement(\"div\")\r\n\t\t\t} : {action: INSERTION, index: i}\r\n\t\t})\r\n\r\n\t\tvar actions = []\r\n\t\tfor (var prop in existing) {\r\n\t\t\tif (hasOwn.call(existing, prop)) {\r\n\t\t\t\tactions.push(existing[prop])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar changes = actions.sort(sortChanges)\r\n\t\tvar newCached = new Array(cached.length)\r\n\r\n\t\tnewCached.nodes = cached.nodes.slice()\r\n\r\n\t\tforEach(changes, function (change) {\r\n\t\t\tvar index = change.index\r\n\t\t\tif (change.action === DELETION) {\r\n\t\t\t\tclear(cached[index].nodes, cached[index])\r\n\t\t\t\tnewCached.splice(index, 1)\r\n\t\t\t}\r\n\t\t\tif (change.action === INSERTION) {\r\n\t\t\t\tvar dummy = $document.createElement(\"div\")\r\n\t\t\t\tdummy.key = data[index].attrs.key\r\n\t\t\t\tinsertNode(parentElement, dummy, index)\r\n\t\t\t\tnewCached.splice(index, 0, {\r\n\t\t\t\t\tattrs: {key: data[index].attrs.key},\r\n\t\t\t\t\tnodes: [dummy]\r\n\t\t\t\t})\r\n\t\t\t\tnewCached.nodes[index] = dummy\r\n\t\t\t}\r\n\r\n\t\t\tif (change.action === MOVE) {\r\n\t\t\t\tvar changeElement = change.element\r\n\t\t\t\tvar maybeChanged = parentElement.childNodes[index]\r\n\t\t\t\tif (maybeChanged !== changeElement && changeElement !== null) {\r\n\t\t\t\t\tparentElement.insertBefore(changeElement,\r\n\t\t\t\t\t\tmaybeChanged || null)\r\n\t\t\t\t}\r\n\t\t\t\tnewCached[index] = cached[change.from]\r\n\t\t\t\tnewCached.nodes[index] = changeElement\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn newCached\r\n\t}\r\n\r\n\tfunction diffKeys(data, cached, existing, parentElement) {\r\n\t\tvar keysDiffer = data.length !== cached.length\r\n\r\n\t\tif (!keysDiffer) {\r\n\t\t\tforKeys(data, function (attrs, i) {\r\n\t\t\t\tvar cachedCell = cached[i]\r\n\t\t\t\treturn keysDiffer = cachedCell &&\r\n\t\t\t\t\tcachedCell.attrs &&\r\n\t\t\t\t\tcachedCell.attrs.key !== attrs.key\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (keysDiffer) {\r\n\t\t\treturn handleKeysDiffer(data, existing, cached, parentElement)\r\n\t\t} else {\r\n\t\t\treturn cached\r\n\t\t}\r\n\t}\r\n\r\n\tfunction diffArray(data, cached, nodes) {\r\n\t\t// diff the array itself\r\n\r\n\t\t// update the list of DOM nodes by collecting the nodes from each item\r\n\t\tforEach(data, function (_, i) {\r\n\t\t\tif (cached[i] != null) nodes.push.apply(nodes, cached[i].nodes)\r\n\t\t})\r\n\t\t// remove items from the end of the array if the new array is shorter\r\n\t\t// than the old one. if errors ever happen here, the issue is most\r\n\t\t// likely a bug in the construction of the `cached` data structure\r\n\t\t// somewhere earlier in the program\r\n\t\tforEach(cached.nodes, function (node, i) {\r\n\t\t\tif (node.parentNode != null && nodes.indexOf(node) < 0) {\r\n\t\t\t\tclear([node], [cached[i]])\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (data.length < cached.length) cached.length = data.length\r\n\t\tcached.nodes = nodes\r\n\t}\r\n\r\n\tfunction buildArrayKeys(data) {\r\n\t\tvar guid = 0\r\n\t\tforKeys(data, function () {\r\n\t\t\tforEach(data, function (attrs) {\r\n\t\t\t\tif ((attrs = attrs && attrs.attrs) && attrs.key == null) {\r\n\t\t\t\t\tattrs.key = \"__mithril__\" + guid++\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn 1\r\n\t\t})\r\n\t}\r\n\r\n\tfunction isDifferentEnough(data, cached, dataAttrKeys) {\r\n\t\tif (data.tag !== cached.tag) return true\r\n\r\n\t\tif (dataAttrKeys.sort().join() !==\r\n\t\t\t\tObject.keys(cached.attrs).sort().join()) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif (data.attrs.id !== cached.attrs.id) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif (data.attrs.key !== cached.attrs.key) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tif (m.redraw.strategy() === \"all\") {\r\n\t\t\treturn !cached.configContext || cached.configContext.retain !== true\r\n\t\t}\r\n\r\n\t\tif (m.redraw.strategy() === \"diff\") {\r\n\t\t\treturn cached.configContext && cached.configContext.retain === false\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tfunction maybeRecreateObject(data, cached, dataAttrKeys) {\r\n\t\t// if an element is different enough from the one in cache, recreate it\r\n\t\tif (isDifferentEnough(data, cached, dataAttrKeys)) {\r\n\t\t\tif (cached.nodes.length) clear(cached.nodes)\r\n\r\n\t\t\tif (cached.configContext &&\r\n\t\t\t\t\tisFunction(cached.configContext.onunload)) {\r\n\t\t\t\tcached.configContext.onunload()\r\n\t\t\t}\r\n\r\n\t\t\tif (cached.controllers) {\r\n\t\t\t\tforEach(cached.controllers, function (controller) {\r\n\t\t\t\t\tif (controller.onunload) {\r\n\t\t\t\t\t\tcontroller.onunload({preventDefault: noop})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getObjectNamespace(data, namespace) {\r\n\t\tif (data.attrs.xmlns) return data.attrs.xmlns\r\n\t\tif (data.tag === \"svg\") return \"http://www.w3.org/2000/svg\"\r\n\t\tif (data.tag === \"math\") return \"http://www.w3.org/1998/Math/MathML\"\r\n\t\treturn namespace\r\n\t}\r\n\r\n\tvar pendingRequests = 0\r\n\tm.startComputation = function () { pendingRequests++ }\r\n\tm.endComputation = function () {\r\n\t\tif (pendingRequests > 1) {\r\n\t\t\tpendingRequests--\r\n\t\t} else {\r\n\t\t\tpendingRequests = 0\r\n\t\t\tm.redraw()\r\n\t\t}\r\n\t}\r\n\r\n\tfunction unloadCachedControllers(cached, views, controllers) {\r\n\t\tif (controllers.length) {\r\n\t\t\tcached.views = views\r\n\t\t\tcached.controllers = controllers\r\n\t\t\tforEach(controllers, function (controller) {\r\n\t\t\t\tif (controller.onunload && controller.onunload.$old) {\r\n\t\t\t\t\tcontroller.onunload = controller.onunload.$old\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (pendingRequests && controller.onunload) {\r\n\t\t\t\t\tvar onunload = controller.onunload\r\n\t\t\t\t\tcontroller.onunload = function (){}\r\n\t\t\t\t\tcontroller.onunload.$old = onunload\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction scheduleConfigsToBeCalled(configs, data, node, isNew, cached) {\r\n\t\t// schedule configs to be called. They are called after `build` finishes\r\n\t\t// running\r\n\t\tif (isFunction(data.attrs.config)) {\r\n\t\t\tvar context = cached.configContext = cached.configContext || {}\r\n\r\n\t\t\t// bind\r\n\t\t\tconfigs.push(function () {\r\n\t\t\t\treturn data.attrs.config.call(data, node, !isNew, context,\r\n\t\t\t\t\tcached)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buildUpdatedNode(\r\n\t\tcached,\r\n\t\tdata,\r\n\t\teditable,\r\n\t\thasKeys,\r\n\t\tnamespace,\r\n\t\tviews,\r\n\t\tconfigs,\r\n\t\tcontrollers\r\n\t) {\r\n\t\tvar node = cached.nodes[0]\r\n\r\n\t\tif (hasKeys) {\r\n\t\t\tsetAttributes(node, data.tag, data.attrs, cached.attrs, namespace)\r\n\t\t}\r\n\r\n\t\tcached.children = build(\r\n\t\t\tnode,\r\n\t\t\tdata.tag,\r\n\t\t\tundefined,\r\n\t\t\tundefined,\r\n\t\t\tdata.children,\r\n\t\t\tcached.children,\r\n\t\t\tfalse,\r\n\t\t\t0,\r\n\t\t\tdata.attrs.contenteditable ? node : editable,\r\n\t\t\tnamespace,\r\n\t\t\tconfigs\r\n\t\t)\r\n\r\n\t\tcached.nodes.intact = true\r\n\r\n\t\tif (controllers.length) {\r\n\t\t\tcached.views = views\r\n\t\t\tcached.controllers = controllers\r\n\t\t}\r\n\r\n\t\treturn node\r\n\t}\r\n\r\n\tfunction handleNonexistentNodes(data, parentElement, index) {\r\n\t\tvar nodes\r\n\t\tif (data.$trusted) {\r\n\t\t\tnodes = injectHTML(parentElement, index, data)\r\n\t\t} else {\r\n\t\t\tnodes = [$document.createTextNode(data)]\r\n\t\t\tif (!(parentElement.nodeName in voidElements)) {\r\n\t\t\t\tinsertNode(parentElement, nodes[0], index)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar cached\r\n\r\n\t\tif (typeof data === \"string\" ||\r\n\t\t\t\ttypeof data === \"number\" ||\r\n\t\t\t\ttypeof data === \"boolean\") {\r\n\t\t\tcached = new data.constructor(data)\r\n\t\t} else {\r\n\t\t\tcached = data\r\n\t\t}\r\n\r\n\t\tcached.nodes = nodes\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction reattachNodes(\r\n\t\tdata,\r\n\t\tcached,\r\n\t\tparentElement,\r\n\t\teditable,\r\n\t\tindex,\r\n\t\tparentTag\r\n\t) {\r\n\t\tvar nodes = cached.nodes\r\n\t\tif (!editable || editable !== $document.activeElement ||\r\n\t\t\t\tdata !== cached) {\r\n\t\t\tif (data.$trusted) {\r\n\t\t\t\tclear(nodes, cached)\r\n\t\t\t\tnodes = injectHTML(parentElement, index, data)\r\n\t\t\t} else if (parentTag === \"textarea\") {\r\n\t\t\t\t// <textarea> uses `value` instead of `nodeValue`.\r\n\t\t\t\tparentElement.value = data\r\n\t\t\t} else if (editable) {\r\n\t\t\t\t// contenteditable nodes use `innerHTML` instead of `nodeValue`.\r\n\t\t\t\teditable.innerHTML = data\r\n\t\t\t\tnodes = [].slice.call(editable.childNodes)\r\n\t\t\t} else {\r\n\t\t\t\t// was a trusted string\r\n\t\t\t\tif (nodes[0].nodeType === 1 || nodes.length > 1 ||\r\n\t\t\t\t\t\t(nodes[0].nodeValue.trim &&\r\n\t\t\t\t\t\t\t!nodes[0].nodeValue.trim())) {\r\n\t\t\t\t\tclear(cached.nodes, cached)\r\n\t\t\t\t\tnodes = [$document.createTextNode(data)]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinjectTextNode(parentElement, nodes[0], index, data)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcached = new data.constructor(data)\r\n\t\tcached.nodes = nodes\r\n\t\tcached.$trusted = data.$trusted\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction handleTextNode(\r\n\t\tcached,\r\n\t\tdata,\r\n\t\tindex,\r\n\t\tparentElement,\r\n\t\tshouldReattach,\r\n\t\teditable,\r\n\t\tparentTag\r\n\t) {\r\n\t\tif (!cached.nodes.length) {\r\n\t\t\treturn handleNonexistentNodes(data, parentElement, index)\r\n\t\t} else if (cached.valueOf() !== data.valueOf() || shouldReattach) {\r\n\t\t\treturn reattachNodes(data, cached, parentElement, editable, index,\r\n\t\t\t\tparentTag)\r\n\t\t} else {\r\n\t\t\treturn (cached.nodes.intact = true, cached)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getSubArrayCount(item) {\r\n\t\tif (item.$trusted) {\r\n\t\t\t// fix offset of next element if item was a trusted string w/ more\r\n\t\t\t// than one html element\r\n\t\t\treturn item.nodes.length\r\n\t\t} else if (isArray(item)) {\r\n\t\t\treturn item.length\r\n\t\t}\r\n\t\treturn 1\r\n\t}\r\n\r\n\tfunction buildArray(\r\n\t\tdata,\r\n\t\tcached,\r\n\t\tparentElement,\r\n\t\tindex,\r\n\t\tparentTag,\r\n\t\tshouldReattach,\r\n\t\teditable,\r\n\t\tnamespace,\r\n\t\tconfigs\r\n\t) {\r\n\t\tdata = flatten(data)\r\n\t\tvar nodes = []\r\n\t\tvar intact = cached.length === data.length\r\n\t\tvar subArrayCount = 0\r\n\r\n\t\t// keys algorithm: sort elements without recreating them if keys are\r\n\t\t// present\r\n\t\t//\r\n\t\t// 1) create a map of all existing keys, and mark all for deletion\r\n\t\t// 2) add new keys to map and mark them for addition\r\n\t\t// 3) if key exists in new list, change action from deletion to a move\r\n\t\t// 4) for each key, handle its corresponding action as marked in\r\n\t\t//    previous steps\r\n\r\n\t\tvar existing = {}\r\n\t\tvar shouldMaintainIdentities = false\r\n\r\n\t\tforKeys(cached, function (attrs, i) {\r\n\t\t\tshouldMaintainIdentities = true\r\n\t\t\texisting[cached[i].attrs.key] = {action: DELETION, index: i}\r\n\t\t})\r\n\r\n\t\tbuildArrayKeys(data)\r\n\t\tif (shouldMaintainIdentities) {\r\n\t\t\tcached = diffKeys(data, cached, existing, parentElement)\r\n\t\t}\r\n\t\t// end key algorithm\r\n\r\n\t\tvar cacheCount = 0\r\n\t\t// faster explicitly written\r\n\t\tfor (var i = 0, len = data.length; i < len; i++) {\r\n\t\t\t// diff each item in the array\r\n\t\t\tvar item = build(\r\n\t\t\t\tparentElement,\r\n\t\t\t\tparentTag,\r\n\t\t\t\tcached,\r\n\t\t\t\tindex,\r\n\t\t\t\tdata[i],\r\n\t\t\t\tcached[cacheCount],\r\n\t\t\t\tshouldReattach,\r\n\t\t\t\tindex + subArrayCount || subArrayCount,\r\n\t\t\t\teditable,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tconfigs)\r\n\r\n\t\t\tif (item !== undefined) {\r\n\t\t\t\tintact = intact && item.nodes.intact\r\n\t\t\t\tsubArrayCount += getSubArrayCount(item)\r\n\t\t\t\tcached[cacheCount++] = item\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!intact) diffArray(data, cached, nodes)\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction makeCache(data, cached, index, parentIndex, parentCache) {\r\n\t\tif (cached != null) {\r\n\t\t\tif (type.call(cached) === type.call(data)) return cached\r\n\r\n\t\t\tif (parentCache && parentCache.nodes) {\r\n\t\t\t\tvar offset = index - parentIndex\r\n\t\t\t\tvar end = offset + (isArray(data) ? data : cached.nodes).length\r\n\t\t\t\tclear(\r\n\t\t\t\t\tparentCache.nodes.slice(offset, end),\r\n\t\t\t\t\tparentCache.slice(offset, end))\r\n\t\t\t} else if (cached.nodes) {\r\n\t\t\t\tclear(cached.nodes, cached)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcached = new data.constructor()\r\n\t\t// if constructor creates a virtual dom element, use a blank object as\r\n\t\t// the base cached node instead of copying the virtual el (#277)\r\n\t\tif (cached.tag) cached = {}\r\n\t\tcached.nodes = []\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction constructNode(data, namespace) {\r\n\t\tif (data.attrs.is) {\r\n\t\t\tif (namespace == null) {\r\n\t\t\t\treturn $document.createElement(data.tag, data.attrs.is)\r\n\t\t\t} else {\r\n\t\t\t\treturn $document.createElementNS(namespace, data.tag,\r\n\t\t\t\t\tdata.attrs.is)\r\n\t\t\t}\r\n\t\t} else if (namespace == null) {\r\n\t\t\treturn $document.createElement(data.tag)\r\n\t\t} else {\r\n\t\t\treturn $document.createElementNS(namespace, data.tag)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction constructAttrs(data, node, namespace, hasKeys) {\r\n\t\tif (hasKeys) {\r\n\t\t\treturn setAttributes(node, data.tag, data.attrs, {}, namespace)\r\n\t\t} else {\r\n\t\t\treturn data.attrs\r\n\t\t}\r\n\t}\r\n\r\n\tfunction constructChildren(\r\n\t\tdata,\r\n\t\tnode,\r\n\t\tcached,\r\n\t\teditable,\r\n\t\tnamespace,\r\n\t\tconfigs\r\n\t) {\r\n\t\tif (data.children != null && data.children.length > 0) {\r\n\t\t\treturn build(\r\n\t\t\t\tnode,\r\n\t\t\t\tdata.tag,\r\n\t\t\t\tundefined,\r\n\t\t\t\tundefined,\r\n\t\t\t\tdata.children,\r\n\t\t\t\tcached.children,\r\n\t\t\t\ttrue,\r\n\t\t\t\t0,\r\n\t\t\t\tdata.attrs.contenteditable ? node : editable,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tconfigs)\r\n\t\t} else {\r\n\t\t\treturn data.children\r\n\t\t}\r\n\t}\r\n\r\n\tfunction reconstructCached(\r\n\t\tdata,\r\n\t\tattrs,\r\n\t\tchildren,\r\n\t\tnode,\r\n\t\tnamespace,\r\n\t\tviews,\r\n\t\tcontrollers\r\n\t) {\r\n\t\tvar cached = {\r\n\t\t\ttag: data.tag,\r\n\t\t\tattrs: attrs,\r\n\t\t\tchildren: children,\r\n\t\t\tnodes: [node]\r\n\t\t}\r\n\r\n\t\tunloadCachedControllers(cached, views, controllers)\r\n\r\n\t\tif (cached.children && !cached.children.nodes) {\r\n\t\t\tcached.children.nodes = []\r\n\t\t}\r\n\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction getController(views, view, cachedControllers, controller) {\r\n\t\tvar controllerIndex\r\n\r\n\t\tif (m.redraw.strategy() === \"diff\" && views) {\r\n\t\t\tcontrollerIndex = views.indexOf(view)\r\n\t\t} else {\r\n\t\t\tcontrollerIndex = -1\r\n\t\t}\r\n\r\n\t\tif (controllerIndex > -1) {\r\n\t\t\treturn cachedControllers[controllerIndex]\r\n\t\t} else if (isFunction(controller)) {\r\n\t\t\treturn new controller()\r\n\t\t} else {\r\n\t\t\treturn {}\r\n\t\t}\r\n\t}\r\n\r\n\tvar unloaders = []\r\n\r\n\tfunction updateLists(views, controllers, view, controller) {\r\n\t\tif (controller.onunload != null &&\r\n\t\t\t\tunloaders.map(function (u) { return u.handler })\r\n\t\t\t\t\t.indexOf(controller.onunload) < 0) {\r\n\t\t\tunloaders.push({\r\n\t\t\t\tcontroller: controller,\r\n\t\t\t\thandler: controller.onunload\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tviews.push(view)\r\n\t\tcontrollers.push(controller)\r\n\t}\r\n\r\n\tvar forcing = false\r\n\tfunction checkView(\r\n\t\tdata,\r\n\t\tview,\r\n\t\tcached,\r\n\t\tcachedControllers,\r\n\t\tcontrollers,\r\n\t\tviews\r\n\t) {\r\n\t\tvar controller = getController(\r\n\t\t\tcached.views,\r\n\t\t\tview,\r\n\t\t\tcachedControllers,\r\n\t\t\tdata.controller)\r\n\r\n\t\tvar key = data && data.attrs && data.attrs.key\r\n\r\n\t\tif (pendingRequests === 0 ||\r\n\t\t\t\tforcing ||\r\n\t\t\t\tcachedControllers &&\r\n\t\t\t\t\tcachedControllers.indexOf(controller) > -1) {\r\n\t\t\tdata = data.view(controller)\r\n\t\t} else {\r\n\t\t\tdata = {tag: \"placeholder\"}\r\n\t\t}\r\n\r\n\t\tif (data.subtree === \"retain\") return data\r\n\t\tdata.attrs = data.attrs || {}\r\n\t\tdata.attrs.key = key\r\n\t\tupdateLists(views, controllers, view, controller)\r\n\t\treturn data\r\n\t}\r\n\r\n\tfunction markViews(data, cached, views, controllers) {\r\n\t\tvar cachedControllers = cached && cached.controllers\r\n\r\n\t\twhile (data.view != null) {\r\n\t\t\tdata = checkView(\r\n\t\t\t\tdata,\r\n\t\t\t\tdata.view.$original || data.view,\r\n\t\t\t\tcached,\r\n\t\t\t\tcachedControllers,\r\n\t\t\t\tcontrollers,\r\n\t\t\t\tviews)\r\n\t\t}\r\n\r\n\t\treturn data\r\n\t}\r\n\r\n\tfunction buildObject( // eslint-disable-line max-statements\r\n\t\tdata,\r\n\t\tcached,\r\n\t\teditable,\r\n\t\tparentElement,\r\n\t\tindex,\r\n\t\tshouldReattach,\r\n\t\tnamespace,\r\n\t\tconfigs\r\n\t) {\r\n\t\tvar views = []\r\n\t\tvar controllers = []\r\n\r\n\t\tdata = markViews(data, cached, views, controllers)\r\n\r\n\t\tif (data.subtree === \"retain\") return cached\r\n\r\n\t\tif (!data.tag && controllers.length) {\r\n\t\t\tthrow new Error(\"Component template must return a virtual \" +\r\n\t\t\t\t\"element, not an array, string, etc.\")\r\n\t\t}\r\n\r\n\t\tdata.attrs = data.attrs || {}\r\n\t\tcached.attrs = cached.attrs || {}\r\n\r\n\t\tvar dataAttrKeys = Object.keys(data.attrs)\r\n\t\tvar hasKeys = dataAttrKeys.length > (\"key\" in data.attrs ? 1 : 0)\r\n\r\n\t\tmaybeRecreateObject(data, cached, dataAttrKeys)\r\n\r\n\t\tif (!isString(data.tag)) return\r\n\r\n\t\tvar isNew = cached.nodes.length === 0\r\n\r\n\t\tnamespace = getObjectNamespace(data, namespace)\r\n\r\n\t\tvar node\r\n\t\tif (isNew) {\r\n\t\t\tnode = constructNode(data, namespace)\r\n\t\t\t// set attributes first, then create children\r\n\t\t\tvar attrs = constructAttrs(data, node, namespace, hasKeys)\r\n\r\n\t\t\t// add the node to its parent before attaching children to it\r\n\t\t\tinsertNode(parentElement, node, index)\r\n\r\n\t\t\tvar children = constructChildren(data, node, cached, editable,\r\n\t\t\t\tnamespace, configs)\r\n\r\n\t\t\tcached = reconstructCached(\r\n\t\t\t\tdata,\r\n\t\t\t\tattrs,\r\n\t\t\t\tchildren,\r\n\t\t\t\tnode,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tviews,\r\n\t\t\t\tcontrollers)\r\n\t\t} else {\r\n\t\t\tnode = buildUpdatedNode(\r\n\t\t\t\tcached,\r\n\t\t\t\tdata,\r\n\t\t\t\teditable,\r\n\t\t\t\thasKeys,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tviews,\r\n\t\t\t\tconfigs,\r\n\t\t\t\tcontrollers)\r\n\t\t}\r\n\r\n\t\t// edge case: setting value on <select> doesn't work before children\r\n\t\t// exist, so set it again after children have been created/updated\r\n\t\tif (data.tag === \"select\" && \"value\" in data.attrs) {\r\n\t\t\tsetAttributes(node, data.tag, {value: data.attrs.value}, {},\r\n\t\t\t\tnamespace)\r\n\t\t}\r\n\r\n\t\tif (!isNew && shouldReattach === true && node != null) {\r\n\t\t\tinsertNode(parentElement, node, index)\r\n\t\t}\r\n\r\n\t\t// The configs are called after `build` finishes running\r\n\t\tscheduleConfigsToBeCalled(configs, data, node, isNew, cached)\r\n\r\n\t\treturn cached\r\n\t}\r\n\r\n\tfunction build(\r\n\t\tparentElement,\r\n\t\tparentTag,\r\n\t\tparentCache,\r\n\t\tparentIndex,\r\n\t\tdata,\r\n\t\tcached,\r\n\t\tshouldReattach,\r\n\t\tindex,\r\n\t\teditable,\r\n\t\tnamespace,\r\n\t\tconfigs\r\n\t) {\r\n\t\t/*\r\n\t\t * `build` is a recursive function that manages creation/diffing/removal\r\n\t\t * of DOM elements based on comparison between `data` and `cached` the\r\n\t\t * diff algorithm can be summarized as this:\r\n\t\t *\r\n\t\t * 1 - compare `data` and `cached`\r\n\t\t * 2 - if they are different, copy `data` to `cached` and update the DOM\r\n\t\t *     based on what the difference is\r\n\t\t * 3 - recursively apply this algorithm for every array and for the\r\n\t\t *     children of every virtual element\r\n\t\t *\r\n\t\t * The `cached` data structure is essentially the same as the previous\r\n\t\t * redraw's `data` data structure, with a few additions:\r\n\t\t * - `cached` always has a property called `nodes`, which is a list of\r\n\t\t *    DOM elements that correspond to the data represented by the\r\n\t\t *    respective virtual element\r\n\t\t * - in order to support attaching `nodes` as a property of `cached`,\r\n\t\t *    `cached` is *always* a non-primitive object, i.e. if the data was\r\n\t\t *    a string, then cached is a String instance. If data was `null` or\r\n\t\t *    `undefined`, cached is `new String(\"\")`\r\n\t\t * - `cached also has a `configContext` property, which is the state\r\n\t\t *    storage object exposed by config(element, isInitialized, context)\r\n\t\t * - when `cached` is an Object, it represents a virtual element; when\r\n\t\t *    it's an Array, it represents a list of elements; when it's a\r\n\t\t *    String, Number or Boolean, it represents a text node\r\n\t\t *\r\n\t\t * `parentElement` is a DOM element used for W3C DOM API calls\r\n\t\t * `parentTag` is only used for handling a corner case for textarea\r\n\t\t * values\r\n\t\t * `parentCache` is used to remove nodes in some multi-node cases\r\n\t\t * `parentIndex` and `index` are used to figure out the offset of nodes.\r\n\t\t * They're artifacts from before arrays started being flattened and are\r\n\t\t * likely refactorable\r\n\t\t * `data` and `cached` are, respectively, the new and old nodes being\r\n\t\t * diffed\r\n\t\t * `shouldReattach` is a flag indicating whether a parent node was\r\n\t\t * recreated (if so, and if this node is reused, then this node must\r\n\t\t * reattach itself to the new parent)\r\n\t\t * `editable` is a flag that indicates whether an ancestor is\r\n\t\t * contenteditable\r\n\t\t * `namespace` indicates the closest HTML namespace as it cascades down\r\n\t\t * from an ancestor\r\n\t\t * `configs` is a list of config functions to run after the topmost\r\n\t\t * `build` call finishes running\r\n\t\t *\r\n\t\t * there's logic that relies on the assumption that null and undefined\r\n\t\t * data are equivalent to empty strings\r\n\t\t * - this prevents lifecycle surprises from procedural helpers that mix\r\n\t\t *   implicit and explicit return statements (e.g.\r\n\t\t *   function foo() {if (cond) return m(\"div\")}\r\n\t\t * - it simplifies diffing code\r\n\t\t */\r\n\t\tdata = dataToString(data)\r\n\t\tif (data.subtree === \"retain\") return cached\r\n\t\tcached = makeCache(data, cached, index, parentIndex, parentCache)\r\n\r\n\t\tif (isArray(data)) {\r\n\t\t\treturn buildArray(\r\n\t\t\t\tdata,\r\n\t\t\t\tcached,\r\n\t\t\t\tparentElement,\r\n\t\t\t\tindex,\r\n\t\t\t\tparentTag,\r\n\t\t\t\tshouldReattach,\r\n\t\t\t\teditable,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tconfigs)\r\n\t\t} else if (data != null && isObject(data)) {\r\n\t\t\treturn buildObject(\r\n\t\t\t\tdata,\r\n\t\t\t\tcached,\r\n\t\t\t\teditable,\r\n\t\t\t\tparentElement,\r\n\t\t\t\tindex,\r\n\t\t\t\tshouldReattach,\r\n\t\t\t\tnamespace,\r\n\t\t\t\tconfigs)\r\n\t\t} else if (!isFunction(data)) {\r\n\t\t\treturn handleTextNode(\r\n\t\t\t\tcached,\r\n\t\t\t\tdata,\r\n\t\t\t\tindex,\r\n\t\t\t\tparentElement,\r\n\t\t\t\tshouldReattach,\r\n\t\t\t\teditable,\r\n\t\t\t\tparentTag)\r\n\t\t} else {\r\n\t\t\treturn cached\r\n\t\t}\r\n\t}\r\n\r\n\tfunction sortChanges(a, b) {\r\n\t\treturn a.action - b.action || a.index - b.index\r\n\t}\r\n\r\n\tfunction copyStyleAttrs(node, dataAttr, cachedAttr) {\r\n\t\tif (cachedAttr === dataAttr) {\r\n\t\t\tnode.style = \"\"\r\n\t\t\tcachedAttr = {}\r\n\t\t}\r\n\t\tfor (var rule in dataAttr) {\r\n\t\t\tif (hasOwn.call(dataAttr, rule)) {\r\n\t\t\t\tif (cachedAttr == null || cachedAttr[rule] !== dataAttr[rule]) {\r\n\t\t\t\t\tnode.style[rule] = dataAttr[rule]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (rule in cachedAttr) {\r\n\t\t\tif (hasOwn.call(cachedAttr, rule)) {\r\n\t\t\t\tif (!hasOwn.call(dataAttr, rule)) node.style[rule] = \"\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar shouldUseSetAttribute = {\r\n\t\tlist: 1,\r\n\t\tstyle: 1,\r\n\t\tform: 1,\r\n\t\ttype: 1,\r\n\t\twidth: 1,\r\n\t\theight: 1\r\n\t}\r\n\r\n\tfunction setSingleAttr(\r\n\t\tnode,\r\n\t\tattrName,\r\n\t\tdataAttr,\r\n\t\tcachedAttr,\r\n\t\ttag,\r\n\t\tnamespace\r\n\t) {\r\n\t\tif (attrName === \"config\" || attrName === \"key\") {\r\n\t\t\t// `config` isn't a real attribute, so ignore it\r\n\t\t\treturn true\r\n\t\t} else if (isFunction(dataAttr) && attrName.slice(0, 2) === \"on\") {\r\n\t\t\t// hook event handlers to the auto-redrawing system\r\n\t\t\tnode[attrName] = autoredraw(dataAttr, node)\r\n\t\t} else if (attrName === \"style\" && dataAttr != null &&\r\n\t\t\t\tisObject(dataAttr)) {\r\n\t\t\t// handle `style: {...}`\r\n\t\t\tcopyStyleAttrs(node, dataAttr, cachedAttr)\r\n\t\t} else if (namespace != null) {\r\n\t\t\t// handle SVG\r\n\t\t\tif (attrName === \"href\") {\r\n\t\t\t\tnode.setAttributeNS(\"http://www.w3.org/1999/xlink\",\r\n\t\t\t\t\t\"href\", dataAttr)\r\n\t\t\t} else {\r\n\t\t\t\tnode.setAttribute(\r\n\t\t\t\t\tattrName === \"className\" ? \"class\" : attrName,\r\n\t\t\t\t\tdataAttr)\r\n\t\t\t}\r\n\t\t} else if (attrName in node && !shouldUseSetAttribute[attrName]) {\r\n\t\t\t// handle cases that are properties (but ignore cases where we\r\n\t\t\t// should use setAttribute instead)\r\n\t\t\t//\r\n\t\t\t// - list and form are typically used as strings, but are DOM\r\n\t\t\t//   element references in js\r\n\t\t\t//\r\n\t\t\t// - when using CSS selectors (e.g. `m(\"[style='']\")`), style is\r\n\t\t\t//   used as a string, but it's an object in js\r\n\t\t\t//\r\n\t\t\t// #348 don't set the value if not needed - otherwise, cursor\r\n\t\t\t// placement breaks in Chrome\r\n\t\t\t// #1252 likewise when `contenteditable` is set on an element.\r\n\t\t\ttry {\r\n\t\t\t\tif (\r\n\t\t\t\t\ttag !== \"input\" && !node.isContentEditable ||\r\n\t\t\t\t\tnode[attrName] != dataAttr // eslint-disable-line eqeqeq\r\n\t\t\t\t) {\r\n\t\t\t\t\tnode[attrName] = dataAttr\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tnode.setAttribute(attrName, dataAttr)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tnode.setAttribute(attrName, dataAttr)\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// IE8 doesn't allow change input attributes and throws\r\n\t\t\t\t// an exception. Unfortunately it cannot be handled, because\r\n\t\t\t\t// error code is not informative.\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction trySetAttr(\r\n\t\tnode,\r\n\t\tattrName,\r\n\t\tdataAttr,\r\n\t\tcachedAttr,\r\n\t\tcachedAttrs,\r\n\t\ttag,\r\n\t\tnamespace\r\n\t) {\r\n\t\tif (!(attrName in cachedAttrs) ||\r\n\t\t\t\t(cachedAttr !== dataAttr) ||\r\n\t\t\t\ttypeof dataAttr === \"object\" ||\r\n\t\t\t\t($document.activeElement === node)) {\r\n\t\t\tcachedAttrs[attrName] = dataAttr\r\n\t\t\ttry {\r\n\t\t\t\treturn setSingleAttr(\r\n\t\t\t\t\tnode,\r\n\t\t\t\t\tattrName,\r\n\t\t\t\t\tdataAttr,\r\n\t\t\t\t\tcachedAttr,\r\n\t\t\t\t\ttag,\r\n\t\t\t\t\tnamespace)\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// swallow IE's invalid argument errors to mimic HTML's\r\n\t\t\t\t// fallback-to-doing-nothing-on-invalid-attributes behavior\r\n\t\t\t\tif (e.message.indexOf(\"Invalid argument\") < 0) throw e\r\n\t\t\t}\r\n\t\t} else if (attrName === \"value\" && tag === \"input\" &&\r\n\t\t\t\t\t\t\t\t/* eslint-disable eqeqeq */\r\n\t\t\t\t\t\t\t\tnode.value != dataAttr) {\r\n\t\t\t\t\t\t\t\t// #348 dataAttr may not be a string,\r\n\t\t\t\t\t\t\t\t// so use loose comparison\r\n\t\t\t\t\t\t\t\t/* eslint-enable eqeqeq */\r\n\t\t\tnode.value = dataAttr\r\n\t\t}\r\n\t}\r\n\r\n\tfunction setAttributes(node, tag, dataAttrs, cachedAttrs, namespace) {\r\n\t\tfor (var attrName in dataAttrs) {\r\n\t\t\tif (hasOwn.call(dataAttrs, attrName)) {\r\n\t\t\t\tif (trySetAttr(\r\n\t\t\t\t\t\tnode,\r\n\t\t\t\t\t\tattrName,\r\n\t\t\t\t\t\tdataAttrs[attrName],\r\n\t\t\t\t\t\tcachedAttrs[attrName],\r\n\t\t\t\t\t\tcachedAttrs,\r\n\t\t\t\t\t\ttag,\r\n\t\t\t\t\t\tnamespace)) {\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cachedAttrs\r\n\t}\r\n\r\n\tfunction clear(nodes, cached) {\r\n\t\tfor (var i = nodes.length - 1; i > -1; i--) {\r\n\t\t\tif (nodes[i] && nodes[i].parentNode) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tnodes[i].parentNode.removeChild(nodes[i])\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\t\t// ignore if this fails due to order of events (see\r\n\t\t\t\t\t// http://stackoverflow.com/questions/21926083/failed-to-execute-removechild-on-node)\r\n\t\t\t\t\t/* eslint-enable max-len */\r\n\t\t\t\t}\r\n\t\t\t\tcached = [].concat(cached)\r\n\t\t\t\tif (cached[i]) unload(cached[i])\r\n\t\t\t}\r\n\t\t}\r\n\t\t// release memory if nodes is an array. This check should fail if nodes\r\n\t\t// is a NodeList (see loop above)\r\n\t\tif (nodes.length) {\r\n\t\t\tnodes.length = 0\r\n\t\t}\r\n\t}\r\n\r\n\tfunction unload(cached) {\r\n\t\tif (cached.configContext && isFunction(cached.configContext.onunload)) {\r\n\t\t\tcached.configContext.onunload()\r\n\t\t\tcached.configContext.onunload = null\r\n\t\t}\r\n\t\tif (cached.controllers) {\r\n\t\t\tforEach(cached.controllers, function (controller) {\r\n\t\t\t\tif (isFunction(controller.onunload)) {\r\n\t\t\t\t\tcontroller.onunload({preventDefault: noop})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (cached.children) {\r\n\t\t\tif (isArray(cached.children)) forEach(cached.children, unload)\r\n\t\t\telse if (cached.children.tag) unload(cached.children)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction appendTextFragment(parentElement, data) {\r\n\t\ttry {\r\n\t\t\tparentElement.appendChild(\r\n\t\t\t\t$document.createRange().createContextualFragment(data))\r\n\t\t} catch (e) {\r\n\t\t\tparentElement.insertAdjacentHTML(\"beforeend\", data)\r\n\t\t\treplaceScriptNodes(parentElement)\r\n\t\t}\r\n\t}\r\n\r\n\t// Replace script tags inside given DOM element with executable ones.\r\n\t// Will also check children recursively and replace any found script\r\n\t// tags in same manner.\r\n\tfunction replaceScriptNodes(node) {\r\n\t\tif (node.tagName === \"SCRIPT\") {\r\n\t\t\tnode.parentNode.replaceChild(buildExecutableNode(node), node)\r\n\t\t} else {\r\n\t\t\tvar children = node.childNodes\r\n\t\t\tif (children && children.length) {\r\n\t\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t\treplaceScriptNodes(children[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn node\r\n\t}\r\n\r\n\t// Replace script element with one whose contents are executable.\r\n\tfunction buildExecutableNode(node){\r\n\t\tvar scriptEl = document.createElement(\"script\")\r\n\t\tvar attrs = node.attributes\r\n\r\n\t\tfor (var i = 0; i < attrs.length; i++) {\r\n\t\t\tscriptEl.setAttribute(attrs[i].name, attrs[i].value)\r\n\t\t}\r\n\r\n\t\tscriptEl.text = node.innerHTML\r\n\t\treturn scriptEl\r\n\t}\r\n\r\n\tfunction injectHTML(parentElement, index, data) {\r\n\t\tvar nextSibling = parentElement.childNodes[index]\r\n\t\tif (nextSibling) {\r\n\t\t\tvar isElement = nextSibling.nodeType !== 1\r\n\t\t\tvar placeholder = $document.createElement(\"span\")\r\n\t\t\tif (isElement) {\r\n\t\t\t\tparentElement.insertBefore(placeholder, nextSibling || null)\r\n\t\t\t\tplaceholder.insertAdjacentHTML(\"beforebegin\", data)\r\n\t\t\t\tparentElement.removeChild(placeholder)\r\n\t\t\t} else {\r\n\t\t\t\tnextSibling.insertAdjacentHTML(\"beforebegin\", data)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tappendTextFragment(parentElement, data)\r\n\t\t}\r\n\r\n\t\tvar nodes = []\r\n\r\n\t\twhile (parentElement.childNodes[index] !== nextSibling) {\r\n\t\t\tnodes.push(parentElement.childNodes[index])\r\n\t\t\tindex++\r\n\t\t}\r\n\r\n\t\treturn nodes\r\n\t}\r\n\r\n\tfunction autoredraw(callback, object) {\r\n\t\treturn function (e) {\r\n\t\t\te = e || event\r\n\t\t\tm.redraw.strategy(\"diff\")\r\n\t\t\tm.startComputation()\r\n\t\t\ttry {\r\n\t\t\t\treturn callback.call(object, e)\r\n\t\t\t} finally {\r\n\t\t\t\tendFirstComputation()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar html\r\n\tvar documentNode = {\r\n\t\tappendChild: function (node) {\r\n\t\t\tif (html === undefined) html = $document.createElement(\"html\")\r\n\t\t\tif ($document.documentElement &&\r\n\t\t\t\t\t$document.documentElement !== node) {\r\n\t\t\t\t$document.replaceChild(node, $document.documentElement)\r\n\t\t\t} else {\r\n\t\t\t\t$document.appendChild(node)\r\n\t\t\t}\r\n\r\n\t\t\tthis.childNodes = $document.childNodes\r\n\t\t},\r\n\r\n\t\tinsertBefore: function (node) {\r\n\t\t\tthis.appendChild(node)\r\n\t\t},\r\n\r\n\t\tchildNodes: []\r\n\t}\r\n\r\n\tvar nodeCache = []\r\n\tvar cellCache = {}\r\n\r\n\tm.render = function (root, cell, forceRecreation) {\r\n\t\tif (!root) {\r\n\t\t\tthrow new Error(\"Ensure the DOM element being passed to \" +\r\n\t\t\t\t\"m.route/m.mount/m.render is not undefined.\")\r\n\t\t}\r\n\t\tvar configs = []\r\n\t\tvar id = getCellCacheKey(root)\r\n\t\tvar isDocumentRoot = root === $document\r\n\t\tvar node\r\n\r\n\t\tif (isDocumentRoot || root === $document.documentElement) {\r\n\t\t\tnode = documentNode\r\n\t\t} else {\r\n\t\t\tnode = root\r\n\t\t}\r\n\r\n\t\tif (isDocumentRoot && cell.tag !== \"html\") {\r\n\t\t\tcell = {tag: \"html\", attrs: {}, children: cell}\r\n\t\t}\r\n\r\n\t\tif (cellCache[id] === undefined) clear(node.childNodes)\r\n\t\tif (forceRecreation === true) reset(root)\r\n\r\n\t\tcellCache[id] = build(\r\n\t\t\tnode,\r\n\t\t\tnull,\r\n\t\t\tundefined,\r\n\t\t\tundefined,\r\n\t\t\tcell,\r\n\t\t\tcellCache[id],\r\n\t\t\tfalse,\r\n\t\t\t0,\r\n\t\t\tnull,\r\n\t\t\tundefined,\r\n\t\t\tconfigs)\r\n\r\n\t\tforEach(configs, function (config) { config() })\r\n\t}\r\n\r\n\tfunction getCellCacheKey(element) {\r\n\t\tvar index = nodeCache.indexOf(element)\r\n\t\treturn index < 0 ? nodeCache.push(element) - 1 : index\r\n\t}\r\n\r\n\tm.trust = function (value) {\r\n\t\tvalue = new String(value) // eslint-disable-line no-new-wrappers\r\n\t\tvalue.$trusted = true\r\n\t\treturn value\r\n\t}\r\n\r\n\tfunction gettersetter(store) {\r\n\t\tfunction prop() {\r\n\t\t\tif (arguments.length) store = arguments[0]\r\n\t\t\treturn store\r\n\t\t}\r\n\r\n\t\tprop.toJSON = function () {\r\n\t\t\tif (store && isFunction(store.toJSON)) return store.toJSON()\r\n\t\t\treturn store\r\n\t\t}\r\n\r\n\t\treturn prop\r\n\t}\r\n\r\n\tm.prop = function (store) {\r\n\t\tif ((store != null && (isObject(store) || isFunction(store)) ||\r\n\t\t\t\t\t((typeof Promise !== \"undefined\") &&\r\n\t\t\t\t\t\t(store instanceof Promise))) &&\r\n\t\t\t\tisFunction(store.then)) {\r\n\t\t\treturn propify(store)\r\n\t\t}\r\n\r\n\t\treturn gettersetter(store)\r\n\t}\r\n\r\n\tvar roots = []\r\n\tvar components = []\r\n\tvar controllers = []\r\n\tvar lastRedrawId = null\r\n\tvar lastRedrawCallTime = 0\r\n\tvar computePreRedrawHook = null\r\n\tvar computePostRedrawHook = null\r\n\tvar topComponent\r\n\tvar FRAME_BUDGET = 16 // 60 frames per second = 1 call per 16 ms\r\n\r\n\tfunction parameterize(component, args) {\r\n\t\tfunction controller() {\r\n\t\t\t/* eslint-disable no-invalid-this */\r\n\t\t\treturn (component.controller || noop).apply(this, args) || this\r\n\t\t\t/* eslint-enable no-invalid-this */\r\n\t\t}\r\n\r\n\t\tif (component.controller) {\r\n\t\t\tcontroller.prototype = component.controller.prototype\r\n\t\t}\r\n\r\n\t\tfunction view(ctrl) {\r\n\t\t\tvar currentArgs = [ctrl].concat(args)\r\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\r\n\t\t\t\tcurrentArgs.push(arguments[i])\r\n\t\t\t}\r\n\r\n\t\t\treturn component.view.apply(component, currentArgs)\r\n\t\t}\r\n\r\n\t\tview.$original = component.view\r\n\t\tvar output = {controller: controller, view: view}\r\n\t\tif (args[0] && args[0].key != null) output.attrs = {key: args[0].key}\r\n\t\treturn output\r\n\t}\r\n\r\n\tm.component = function (component) {\r\n\t\tvar args = new Array(arguments.length - 1)\r\n\r\n\t\tfor (var i = 1; i < arguments.length; i++) {\r\n\t\t\targs[i - 1] = arguments[i]\r\n\t\t}\r\n\r\n\t\treturn parameterize(component, args)\r\n\t}\r\n\r\n\tvar currentRoute, previousRoute\r\n\r\n\tfunction checkPrevented(component, root, index, isPrevented) {\r\n\t\tif (!isPrevented) {\r\n\t\t\tm.redraw.strategy(\"all\")\r\n\t\t\tm.startComputation()\r\n\t\t\troots[index] = root\r\n\t\t\tvar currentComponent\r\n\r\n\t\t\tif (component) {\r\n\t\t\t\tcurrentComponent = topComponent = component\r\n\t\t\t} else {\r\n\t\t\t\tcurrentComponent = topComponent = component = {controller: noop}\r\n\t\t\t}\r\n\r\n\t\t\tvar controller = new (component.controller || noop)()\r\n\r\n\t\t\t// controllers may call m.mount recursively (via m.route redirects,\r\n\t\t\t// for example)\r\n\t\t\t// this conditional ensures only the last recursive m.mount call is\r\n\t\t\t// applied\r\n\t\t\tif (currentComponent === topComponent) {\r\n\t\t\t\tcontrollers[index] = controller\r\n\t\t\t\tcomponents[index] = component\r\n\t\t\t}\r\n\t\t\tendFirstComputation()\r\n\t\t\tif (component === null) {\r\n\t\t\t\tremoveRootElement(root, index)\r\n\t\t\t}\r\n\t\t\treturn controllers[index]\r\n\t\t} else {\r\n\t\t\tif (component == null) {\r\n\t\t\t\tremoveRootElement(root, index)\r\n\t\t\t}\r\n\r\n\t\t\tif (previousRoute) {\r\n\t\t\t\tcurrentRoute = previousRoute\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tm.mount = m.module = function (root, component) {\r\n\t\tif (!root) {\r\n\t\t\tthrow new Error(\"Ensure the DOM element being passed to \" +\r\n\t\t\t\t\"m.route/m.mount/m.render is not undefined.\")\r\n\t\t}\r\n\r\n\t\tvar index = roots.indexOf(root)\r\n\t\tif (index < 0) index = roots.length\r\n\r\n\t\tvar isPrevented = false\r\n\t\tvar event = {\r\n\t\t\tpreventDefault: function () {\r\n\t\t\t\tisPrevented = true\r\n\t\t\t\tcomputePreRedrawHook = computePostRedrawHook = null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tforEach(unloaders, function (unloader) {\r\n\t\t\tunloader.handler.call(unloader.controller, event)\r\n\t\t\tunloader.controller.onunload = null\r\n\t\t})\r\n\r\n\t\tif (isPrevented) {\r\n\t\t\tforEach(unloaders, function (unloader) {\r\n\t\t\t\tunloader.controller.onunload = unloader.handler\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tunloaders = []\r\n\t\t}\r\n\r\n\t\tif (controllers[index] && isFunction(controllers[index].onunload)) {\r\n\t\t\tcontrollers[index].onunload(event)\r\n\t\t}\r\n\r\n\t\treturn checkPrevented(component, root, index, isPrevented)\r\n\t}\r\n\r\n\tfunction removeRootElement(root, index) {\r\n\t\troots.splice(index, 1)\r\n\t\tcontrollers.splice(index, 1)\r\n\t\tcomponents.splice(index, 1)\r\n\t\treset(root)\r\n\t\tnodeCache.splice(getCellCacheKey(root), 1)\r\n\t\tunloaders = []\r\n\t}\r\n\r\n\tvar redrawing = false\r\n\tm.redraw = function (force) {\r\n\t\tif (redrawing) return\r\n\t\tredrawing = true\r\n\t\tif (force) forcing = true\r\n\r\n\t\ttry {\r\n\t\t\t// lastRedrawId is a positive number if a second redraw is requested\r\n\t\t\t// before the next animation frame\r\n\t\t\t// lastRedrawId is null if it's the first redraw and not an event\r\n\t\t\t// handler\r\n\t\t\tif (lastRedrawId && !force) {\r\n\t\t\t\t// when setTimeout: only reschedule redraw if time between now\r\n\t\t\t\t// and previous redraw is bigger than a frame, otherwise keep\r\n\t\t\t\t// currently scheduled timeout\r\n\t\t\t\t// when rAF: always reschedule redraw\r\n\t\t\t\tif ($requestAnimationFrame === global.requestAnimationFrame ||\r\n\t\t\t\t\t\tnew Date() - lastRedrawCallTime > FRAME_BUDGET) {\r\n\t\t\t\t\tif (lastRedrawId > 0) $cancelAnimationFrame(lastRedrawId)\r\n\t\t\t\t\tlastRedrawId = $requestAnimationFrame(redraw, FRAME_BUDGET)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tredraw()\r\n\t\t\t\tlastRedrawId = $requestAnimationFrame(function () {\r\n\t\t\t\t\tlastRedrawId = null\r\n\t\t\t\t}, FRAME_BUDGET)\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tredrawing = forcing = false\r\n\t\t}\r\n\t}\r\n\r\n\tm.redraw.strategy = m.prop()\r\n\tfunction redraw() {\r\n\t\tif (computePreRedrawHook) {\r\n\t\t\tcomputePreRedrawHook()\r\n\t\t\tcomputePreRedrawHook = null\r\n\t\t}\r\n\t\tforEach(roots, function (root, i) {\r\n\t\t\tvar component = components[i]\r\n\t\t\tif (controllers[i]) {\r\n\t\t\t\tvar args = [controllers[i]]\r\n\t\t\t\tm.render(root,\r\n\t\t\t\t\tcomponent.view ? component.view(controllers[i], args) : \"\")\r\n\t\t\t}\r\n\t\t})\r\n\t\t// after rendering within a routed context, we need to scroll back to\r\n\t\t// the top, and fetch the document title for history.pushState\r\n\t\tif (computePostRedrawHook) {\r\n\t\t\tcomputePostRedrawHook()\r\n\t\t\tcomputePostRedrawHook = null\r\n\t\t}\r\n\t\tlastRedrawId = null\r\n\t\tlastRedrawCallTime = new Date()\r\n\t\tm.redraw.strategy(\"diff\")\r\n\t}\r\n\r\n\tfunction endFirstComputation() {\r\n\t\tif (m.redraw.strategy() === \"none\") {\r\n\t\t\tpendingRequests--\r\n\t\t\tm.redraw.strategy(\"diff\")\r\n\t\t} else {\r\n\t\t\tm.endComputation()\r\n\t\t}\r\n\t}\r\n\r\n\tm.withAttr = function (prop, withAttrCallback, callbackThis) {\r\n\t\treturn function (e) {\r\n\t\t\te = e || window.event\r\n\t\t\t/* eslint-disable no-invalid-this */\r\n\t\t\tvar currentTarget = e.currentTarget || this\r\n\t\t\tvar _this = callbackThis || this\r\n\t\t\t/* eslint-enable no-invalid-this */\r\n\t\t\tvar target = prop in currentTarget ?\r\n\t\t\t\tcurrentTarget[prop] :\r\n\t\t\t\tcurrentTarget.getAttribute(prop)\r\n\t\t\twithAttrCallback.call(_this, target)\r\n\t\t}\r\n\t}\r\n\r\n\t// routing\r\n\tvar modes = {pathname: \"\", hash: \"#\", search: \"?\"}\r\n\tvar redirect = noop\r\n\tvar isDefaultRoute = false\r\n\tvar routeParams\r\n\r\n\tm.route = function (root, arg1, arg2, vdom) { // eslint-disable-line\r\n\t\t// m.route()\r\n\t\tif (arguments.length === 0) return currentRoute\r\n\t\t// m.route(el, defaultRoute, routes)\r\n\t\tif (arguments.length === 3 && isString(arg1)) {\r\n\t\t\tredirect = function (source) {\r\n\t\t\t\tvar path = currentRoute = normalizeRoute(source)\r\n\t\t\t\tif (!routeByValue(root, arg2, path)) {\r\n\t\t\t\t\tif (isDefaultRoute) {\r\n\t\t\t\t\t\tthrow new Error(\"Ensure the default route matches \" +\r\n\t\t\t\t\t\t\t\"one of the routes defined in m.route\")\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tisDefaultRoute = true\r\n\t\t\t\t\tm.route(arg1, true)\r\n\t\t\t\t\tisDefaultRoute = false\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar listener = m.route.mode === \"hash\" ?\r\n\t\t\t\t\"onhashchange\" :\r\n\t\t\t\t\"onpopstate\"\r\n\r\n\t\t\tglobal[listener] = function () {\r\n\t\t\t\tvar path = $location[m.route.mode]\r\n\t\t\t\tif (m.route.mode === \"pathname\") path += $location.search\r\n\t\t\t\tif (currentRoute !== normalizeRoute(path)) redirect(path)\r\n\t\t\t}\r\n\r\n\t\t\tcomputePreRedrawHook = setScroll\r\n\t\t\tglobal[listener]()\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// config: m.route\r\n\t\tif (root.addEventListener || root.attachEvent) {\r\n\t\t\tvar base = m.route.mode !== \"pathname\" ? $location.pathname : \"\"\r\n\t\t\troot.href = base + modes[m.route.mode] + vdom.attrs.href\r\n\t\t\tif (root.addEventListener) {\r\n\t\t\t\troot.removeEventListener(\"click\", routeUnobtrusive)\r\n\t\t\t\troot.addEventListener(\"click\", routeUnobtrusive)\r\n\t\t\t} else {\r\n\t\t\t\troot.detachEvent(\"onclick\", routeUnobtrusive)\r\n\t\t\t\troot.attachEvent(\"onclick\", routeUnobtrusive)\r\n\t\t\t}\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\t// m.route(route, params, shouldReplaceHistoryEntry)\r\n\t\tif (isString(root)) {\r\n\t\t\tpreviousRoute = currentRoute\r\n\t\t\tcurrentRoute = root\r\n\r\n\t\t\tvar args = arg1 || {}\r\n\t\t\tvar queryIndex = currentRoute.indexOf(\"?\")\r\n\t\t\tvar params\r\n\r\n\t\t\tif (queryIndex > -1) {\r\n\t\t\t\tparams = parseQueryString(currentRoute.slice(queryIndex + 1))\r\n\t\t\t} else {\r\n\t\t\t\tparams = {}\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i in args) {\r\n\t\t\t\tif (hasOwn.call(args, i)) {\r\n\t\t\t\t\tparams[i] = args[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar querystring = buildQueryString(params)\r\n\t\t\tvar currentPath\r\n\r\n\t\t\tif (queryIndex > -1) {\r\n\t\t\t\tcurrentPath = currentRoute.slice(0, queryIndex)\r\n\t\t\t} else {\r\n\t\t\t\tcurrentPath = currentRoute\r\n\t\t\t}\r\n\r\n\t\t\tif (querystring) {\r\n\t\t\t\tcurrentRoute = currentPath +\r\n\t\t\t\t\t(currentPath.indexOf(\"?\") === -1 ? \"?\" : \"&\") +\r\n\t\t\t\t\tquerystring\r\n\t\t\t}\r\n\r\n\t\t\tvar replaceHistory =\r\n\t\t\t\t(arguments.length === 3 ? arg2 : arg1) === true ||\r\n\t\t\t\tpreviousRoute === currentRoute\r\n\r\n\t\t\tif (global.history.pushState) {\r\n\t\t\t\tvar method = replaceHistory ? \"replaceState\" : \"pushState\"\r\n\t\t\t\tcomputePreRedrawHook = setScroll\r\n\t\t\t\tcomputePostRedrawHook = function () {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tglobal.history[method](null, $document.title,\r\n\t\t\t\t\t\t\tmodes[m.route.mode] + currentRoute)\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t// In the event of a pushState or replaceState failure,\r\n\t\t\t\t\t\t// fallback to a standard redirect. This is specifically\r\n\t\t\t\t\t\t// to address a Safari security error when attempting to\r\n\t\t\t\t\t\t// call pushState more than 100 times.\r\n\t\t\t\t\t\t$location[m.route.mode] = currentRoute\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tredirect(modes[m.route.mode] + currentRoute)\r\n\t\t\t} else {\r\n\t\t\t\t$location[m.route.mode] = currentRoute\r\n\t\t\t\tredirect(modes[m.route.mode] + currentRoute)\r\n\t\t\t}\r\n\r\n\t\t\tpreviousRoute = null\r\n\t\t}\r\n\t}\r\n\r\n\tm.route.param = function (key) {\r\n\t\tif (!routeParams) {\r\n\t\t\tthrow new Error(\"You must call m.route(element, defaultRoute, \" +\r\n\t\t\t\t\"routes) before calling m.route.param()\")\r\n\t\t}\r\n\r\n\t\tif (!key) {\r\n\t\t\treturn routeParams\r\n\t\t}\r\n\r\n\t\treturn routeParams[key]\r\n\t}\r\n\r\n\tm.route.mode = \"search\"\r\n\r\n\tfunction normalizeRoute(route) {\r\n\t\treturn route.slice(modes[m.route.mode].length)\r\n\t}\r\n\r\n\tfunction routeByValue(root, router, path) {\r\n\t\trouteParams = {}\r\n\r\n\t\tvar queryStart = path.indexOf(\"?\")\r\n\t\tif (queryStart !== -1) {\r\n\t\t\trouteParams = parseQueryString(\r\n\t\t\t\tpath.substr(queryStart + 1, path.length))\r\n\t\t\tpath = path.substr(0, queryStart)\r\n\t\t}\r\n\r\n\t\t// Get all routes and check if there's\r\n\t\t// an exact match for the current path\r\n\t\tvar keys = Object.keys(router)\r\n\t\tvar index = keys.indexOf(path)\r\n\r\n\t\tif (index !== -1){\r\n\t\t\tm.mount(root, router[keys [index]])\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\tfor (var route in router) {\r\n\t\t\tif (hasOwn.call(router, route)) {\r\n\t\t\t\tif (route === path) {\r\n\t\t\t\t\tm.mount(root, router[route])\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar matcher = new RegExp(\"^\" + route\r\n\t\t\t\t\t.replace(/:[^\\/]+?\\.{3}/g, \"(.*?)\")\r\n\t\t\t\t\t.replace(/:[^\\/]+/g, \"([^\\\\/]+)\") + \"\\/?$\")\r\n\r\n\t\t\t\tif (matcher.test(path)) {\r\n\t\t\t\t\t/* eslint-disable no-loop-func */\r\n\t\t\t\t\tpath.replace(matcher, function () {\r\n\t\t\t\t\t\tvar keys = route.match(/:[^\\/]+/g) || []\r\n\t\t\t\t\t\tvar values = [].slice.call(arguments, 1, -2)\r\n\t\t\t\t\t\tforEach(keys, function (key, i) {\r\n\t\t\t\t\t\t\trouteParams[key.replace(/:|\\./g, \"\")] =\r\n\t\t\t\t\t\t\t\tdecodeURIComponent(values[i])\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tm.mount(root, router[route])\r\n\t\t\t\t\t})\r\n\t\t\t\t\t/* eslint-enable no-loop-func */\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction routeUnobtrusive(e) {\r\n\t\te = e || event\r\n\t\tif (e.ctrlKey || e.metaKey || e.shiftKey || e.which === 2) return\r\n\r\n\t\tif (e.preventDefault) {\r\n\t\t\te.preventDefault()\r\n\t\t} else {\r\n\t\t\te.returnValue = false\r\n\t\t}\r\n\r\n\t\tvar currentTarget = e.currentTarget || e.srcElement\r\n\t\tvar args\r\n\r\n\t\tif (m.route.mode === \"pathname\" && currentTarget.search) {\r\n\t\t\targs = parseQueryString(currentTarget.search.slice(1))\r\n\t\t} else {\r\n\t\t\targs = {}\r\n\t\t}\r\n\r\n\t\twhile (currentTarget && !/a/i.test(currentTarget.nodeName)) {\r\n\t\t\tcurrentTarget = currentTarget.parentNode\r\n\t\t}\r\n\r\n\t\t// clear pendingRequests because we want an immediate route change\r\n\t\tpendingRequests = 0\r\n\t\tm.route(currentTarget[m.route.mode]\r\n\t\t\t.slice(modes[m.route.mode].length), args)\r\n\t}\r\n\r\n\tfunction setScroll() {\r\n\t\tif (m.route.mode !== \"hash\" && $location.hash) {\r\n\t\t\t$location.hash = $location.hash\r\n\t\t} else {\r\n\t\t\tglobal.scrollTo(0, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buildQueryString(object, prefix) {\r\n\t\tvar duplicates = {}\r\n\t\tvar str = []\r\n\r\n\t\tfor (var prop in object) {\r\n\t\t\tif (hasOwn.call(object, prop)) {\r\n\t\t\t\tvar key = prefix ? prefix + \"[\" + prop + \"]\" : prop\r\n\t\t\t\tvar value = object[prop]\r\n\r\n\t\t\t\tif (value === null) {\r\n\t\t\t\t\tstr.push(encodeURIComponent(key))\r\n\t\t\t\t} else if (isObject(value)) {\r\n\t\t\t\t\tstr.push(buildQueryString(value, key))\r\n\t\t\t\t} else if (isArray(value)) {\r\n\t\t\t\t\tvar keys = []\r\n\t\t\t\t\tduplicates[key] = duplicates[key] || {}\r\n\t\t\t\t\t/* eslint-disable no-loop-func */\r\n\t\t\t\t\tforEach(value, function (item) {\r\n\t\t\t\t\t\t/* eslint-enable no-loop-func */\r\n\t\t\t\t\t\tif (!duplicates[key][item]) {\r\n\t\t\t\t\t\t\tduplicates[key][item] = true\r\n\t\t\t\t\t\t\tkeys.push(encodeURIComponent(key) + \"=\" +\r\n\t\t\t\t\t\t\t\tencodeURIComponent(item))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tstr.push(keys.join(\"&\"))\r\n\t\t\t\t} else if (value !== undefined) {\r\n\t\t\t\t\tstr.push(encodeURIComponent(key) + \"=\" +\r\n\t\t\t\t\t\tencodeURIComponent(value))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn str.join(\"&\")\r\n\t}\r\n\r\n\tfunction parseQueryString(str) {\r\n\t\tif (str === \"\" || str == null) return {}\r\n\t\tif (str.charAt(0) === \"?\") str = str.slice(1)\r\n\r\n\t\tvar pairs = str.split(\"&\")\r\n\t\tvar params = {}\r\n\r\n\t\tforEach(pairs, function (string) {\r\n\t\t\tvar pair = string.split(\"=\")\r\n\t\t\tvar key = decodeURIComponent(pair[0])\r\n\t\t\tvar value = pair.length === 2 ? decodeURIComponent(pair[1]) : null\r\n\t\t\tif (params[key] != null) {\r\n\t\t\t\tif (!isArray(params[key])) params[key] = [params[key]]\r\n\t\t\t\tparams[key].push(value)\r\n\t\t\t} else params[key] = value\r\n\t\t})\r\n\r\n\t\treturn params\r\n\t}\r\n\r\n\tm.route.buildQueryString = buildQueryString\r\n\tm.route.parseQueryString = parseQueryString\r\n\r\n\tfunction reset(root) {\r\n\t\tvar cacheKey = getCellCacheKey(root)\r\n\t\tclear(root.childNodes, cellCache[cacheKey])\r\n\t\tcellCache[cacheKey] = undefined\r\n\t}\r\n\r\n\tm.deferred = function () {\r\n\t\tvar deferred = new Deferred()\r\n\t\tdeferred.promise = propify(deferred.promise)\r\n\t\treturn deferred\r\n\t}\r\n\r\n\tfunction propify(promise, initialValue) {\r\n\t\tvar prop = m.prop(initialValue)\r\n\t\tpromise.then(prop)\r\n\t\tprop.then = function (resolve, reject) {\r\n\t\t\treturn propify(promise.then(resolve, reject), initialValue)\r\n\t\t}\r\n\r\n\t\tprop[\"catch\"] = prop.then.bind(null, null)\r\n\t\treturn prop\r\n\t}\r\n\t// Promiz.mithril.js | Zolmeister | MIT\r\n\t// a modified version of Promiz.js, which does not conform to Promises/A+\r\n\t// for two reasons:\r\n\t//\r\n\t// 1) `then` callbacks are called synchronously (because setTimeout is too\r\n\t//    slow, and the setImmediate polyfill is too big\r\n\t//\r\n\t// 2) throwing subclasses of Error cause the error to be bubbled up instead\r\n\t//    of triggering rejection (because the spec does not account for the\r\n\t//    important use case of default browser error handling, i.e. message w/\r\n\t//    line number)\r\n\r\n\tvar RESOLVING = 1\r\n\tvar REJECTING = 2\r\n\tvar RESOLVED = 3\r\n\tvar REJECTED = 4\r\n\r\n\tfunction Deferred(onSuccess, onFailure) {\r\n\t\tvar self = this\r\n\t\tvar state = 0\r\n\t\tvar promiseValue = 0\r\n\t\tvar next = []\r\n\r\n\t\tself.promise = {}\r\n\r\n\t\tself.resolve = function (value) {\r\n\t\t\tif (!state) {\r\n\t\t\t\tpromiseValue = value\r\n\t\t\t\tstate = RESOLVING\r\n\r\n\t\t\t\tfire()\r\n\t\t\t}\r\n\r\n\t\t\treturn self\r\n\t\t}\r\n\r\n\t\tself.reject = function (value) {\r\n\t\t\tif (!state) {\r\n\t\t\t\tpromiseValue = value\r\n\t\t\t\tstate = REJECTING\r\n\r\n\t\t\t\tfire()\r\n\t\t\t}\r\n\r\n\t\t\treturn self\r\n\t\t}\r\n\r\n\t\tself.promise.then = function (onSuccess, onFailure) {\r\n\t\t\tvar deferred = new Deferred(onSuccess, onFailure)\r\n\r\n\t\t\tif (state === RESOLVED) {\r\n\t\t\t\tdeferred.resolve(promiseValue)\r\n\t\t\t} else if (state === REJECTED) {\r\n\t\t\t\tdeferred.reject(promiseValue)\r\n\t\t\t} else {\r\n\t\t\t\tnext.push(deferred)\r\n\t\t\t}\r\n\r\n\t\t\treturn deferred.promise\r\n\t\t}\r\n\r\n\t\tfunction finish(type) {\r\n\t\t\tstate = type || REJECTED\r\n\t\t\tnext.map(function (deferred) {\r\n\t\t\t\tif (state === RESOLVED) {\r\n\t\t\t\t\tdeferred.resolve(promiseValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdeferred.reject(promiseValue)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tfunction thennable(then, success, failure, notThennable) {\r\n\t\t\tif (((promiseValue != null && isObject(promiseValue)) ||\r\n\t\t\t\t\tisFunction(promiseValue)) && isFunction(then)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// count protects against abuse calls from spec checker\r\n\t\t\t\t\tvar count = 0\r\n\t\t\t\t\tthen.call(promiseValue, function (value) {\r\n\t\t\t\t\t\tif (count++) return\r\n\t\t\t\t\t\tpromiseValue = value\r\n\t\t\t\t\t\tsuccess()\r\n\t\t\t\t\t}, function (value) {\r\n\t\t\t\t\t\tif (count++) return\r\n\t\t\t\t\t\tpromiseValue = value\r\n\t\t\t\t\t\tfailure()\r\n\t\t\t\t\t})\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tm.deferred.onerror(e)\r\n\t\t\t\t\tpromiseValue = e\r\n\t\t\t\t\tfailure()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnotThennable()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction fire() {\r\n\t\t\t// check if it's a thenable\r\n\t\t\tvar then\r\n\t\t\ttry {\r\n\t\t\t\tthen = promiseValue && promiseValue.then\r\n\t\t\t} catch (e) {\r\n\t\t\t\tm.deferred.onerror(e)\r\n\t\t\t\tpromiseValue = e\r\n\t\t\t\tstate = REJECTING\r\n\t\t\t\treturn fire()\r\n\t\t\t}\r\n\r\n\t\t\tif (state === REJECTING) {\r\n\t\t\t\tm.deferred.onerror(promiseValue)\r\n\t\t\t}\r\n\r\n\t\t\tthennable(then, function () {\r\n\t\t\t\tstate = RESOLVING\r\n\t\t\t\tfire()\r\n\t\t\t}, function () {\r\n\t\t\t\tstate = REJECTING\r\n\t\t\t\tfire()\r\n\t\t\t}, function () {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (state === RESOLVING && isFunction(onSuccess)) {\r\n\t\t\t\t\t\tpromiseValue = onSuccess(promiseValue)\r\n\t\t\t\t\t} else if (state === REJECTING && isFunction(onFailure)) {\r\n\t\t\t\t\t\tpromiseValue = onFailure(promiseValue)\r\n\t\t\t\t\t\tstate = RESOLVING\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tm.deferred.onerror(e)\r\n\t\t\t\t\tpromiseValue = e\r\n\t\t\t\t\treturn finish()\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (promiseValue === self) {\r\n\t\t\t\t\tpromiseValue = TypeError()\r\n\t\t\t\t\tfinish()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthennable(then, function () {\r\n\t\t\t\t\t\tfinish(RESOLVED)\r\n\t\t\t\t\t}, finish, function () {\r\n\t\t\t\t\t\tfinish(state === RESOLVING && RESOLVED)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tm.deferred.onerror = function (e) {\r\n\t\tif (type.call(e) === \"[object Error]\" &&\r\n\t\t\t\t!/ Error/.test(e.constructor.toString())) {\r\n\t\t\tpendingRequests = 0\r\n\t\t\tthrow e\r\n\t\t}\r\n\t}\r\n\r\n\tm.sync = function (args) {\r\n\t\tvar deferred = m.deferred()\r\n\t\tvar outstanding = args.length\r\n\t\tvar results = []\r\n\t\tvar method = \"resolve\"\r\n\r\n\t\tfunction synchronizer(pos, resolved) {\r\n\t\t\treturn function (value) {\r\n\t\t\t\tresults[pos] = value\r\n\t\t\t\tif (!resolved) method = \"reject\"\r\n\t\t\t\tif (--outstanding === 0) {\r\n\t\t\t\t\tdeferred.promise(results)\r\n\t\t\t\t\tdeferred[method](results)\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (args.length > 0) {\r\n\t\t\tforEach(args, function (arg, i) {\r\n\t\t\t\targ.then(synchronizer(i, true), synchronizer(i, false))\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tdeferred.resolve([])\r\n\t\t}\r\n\r\n\t\treturn deferred.promise\r\n\t}\r\n\r\n\tfunction identity(value) { return value }\r\n\r\n\tfunction handleJsonp(options) {\r\n\t\tvar callbackKey = options.callbackName || \"mithril_callback_\" +\r\n\t\t\tnew Date().getTime() + \"_\" +\r\n\t\t\t(Math.round(Math.random() * 1e16)).toString(36)\r\n\r\n\t\tvar script = $document.createElement(\"script\")\r\n\r\n\t\tglobal[callbackKey] = function (resp) {\r\n\t\t\tscript.parentNode.removeChild(script)\r\n\t\t\toptions.onload({\r\n\t\t\t\ttype: \"load\",\r\n\t\t\t\ttarget: {\r\n\t\t\t\t\tresponseText: resp\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tglobal[callbackKey] = undefined\r\n\t\t}\r\n\r\n\t\tscript.onerror = function () {\r\n\t\t\tscript.parentNode.removeChild(script)\r\n\r\n\t\t\toptions.onerror({\r\n\t\t\t\ttype: \"error\",\r\n\t\t\t\ttarget: {\r\n\t\t\t\t\tstatus: 500,\r\n\t\t\t\t\tresponseText: JSON.stringify({\r\n\t\t\t\t\t\terror: \"Error making jsonp request\"\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tglobal[callbackKey] = undefined\r\n\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tscript.onload = function () {\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tscript.src = options.url +\r\n\t\t\t(options.url.indexOf(\"?\") > 0 ? \"&\" : \"?\") +\r\n\t\t\t(options.callbackKey ? options.callbackKey : \"callback\") +\r\n\t\t\t\"=\" + callbackKey +\r\n\t\t\t\"&\" + buildQueryString(options.data || {})\r\n\r\n\t\t$document.body.appendChild(script)\r\n\t}\r\n\r\n\tfunction createXhr(options) {\r\n\t\tvar xhr = new global.XMLHttpRequest()\r\n\t\txhr.open(options.method, options.url, true, options.user,\r\n\t\t\toptions.password)\r\n\r\n\t\txhr.onreadystatechange = function () {\r\n\t\t\tif (xhr.readyState === 4) {\r\n\t\t\t\tif (xhr.status >= 200 && xhr.status < 300) {\r\n\t\t\t\t\toptions.onload({type: \"load\", target: xhr})\r\n\t\t\t\t} else {\r\n\t\t\t\t\toptions.onerror({type: \"error\", target: xhr})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (options.serialize === JSON.stringify &&\r\n\t\t\t\toptions.data &&\r\n\t\t\t\toptions.method !== \"GET\") {\r\n\t\t\txhr.setRequestHeader(\"Content-Type\",\r\n\t\t\t\t\"application/json; charset=utf-8\")\r\n\t\t}\r\n\r\n\t\tif (options.deserialize === JSON.parse) {\r\n\t\t\txhr.setRequestHeader(\"Accept\", \"application/json, text/*\")\r\n\t\t}\r\n\r\n\t\tif (isObject(options.headers)) {\r\n\t\t\tfor (var header in options.headers) {\r\n\t\t\t\tif (hasOwn.call(options.headers, header)) {\r\n\t\t\t\t\txhr.setRequestHeader(header, options.headers[header])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isFunction(options.config)) {\r\n\t\t\tvar maybeXhr = options.config(xhr, options)\r\n\t\t\tif (maybeXhr != null) xhr = maybeXhr\r\n\t\t}\r\n\r\n\t\tvar data = options.method === \"GET\" || !options.data ? \"\" : options.data\r\n\r\n\t\tif (data && !isString(data) && data.constructor !== global.FormData) {\r\n\t\t\tthrow new Error(\"Request data should be either be a string or \" +\r\n\t\t\t\t\"FormData. Check the `serialize` option in `m.request`\")\r\n\t\t}\r\n\r\n\t\txhr.send(data)\r\n\t\treturn xhr\r\n\t}\r\n\r\n\tfunction ajax(options) {\r\n\t\tif (options.dataType && options.dataType.toLowerCase() === \"jsonp\") {\r\n\t\t\treturn handleJsonp(options)\r\n\t\t} else {\r\n\t\t\treturn createXhr(options)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bindData(options, data, serialize) {\r\n\t\tif (options.method === \"GET\" && options.dataType !== \"jsonp\") {\r\n\t\t\tvar prefix = options.url.indexOf(\"?\") < 0 ? \"?\" : \"&\"\r\n\t\t\tvar querystring = buildQueryString(data)\r\n\t\t\toptions.url += (querystring ? prefix + querystring : \"\")\r\n\t\t} else {\r\n\t\t\toptions.data = serialize(data)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction parameterizeUrl(url, data) {\r\n\t\tif (data) {\r\n\t\t\turl = url.replace(/:[a-z]\\w+/gi, function (token){\r\n\t\t\t\tvar key = token.slice(1)\r\n\t\t\t\tvar value = data[key] || token\r\n\t\t\t\tdelete data[key]\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn url\r\n\t}\r\n\r\n\tm.request = function (options) {\r\n\t\tif (options.background !== true) m.startComputation()\r\n\t\tvar deferred = new Deferred()\r\n\t\tvar isJSONP = options.dataType &&\r\n\t\t\toptions.dataType.toLowerCase() === \"jsonp\"\r\n\r\n\t\tvar serialize, deserialize, extract\r\n\r\n\t\tif (isJSONP) {\r\n\t\t\tserialize = options.serialize =\r\n\t\t\tdeserialize = options.deserialize = identity\r\n\r\n\t\t\textract = function (jsonp) { return jsonp.responseText }\r\n\t\t} else {\r\n\t\t\tserialize = options.serialize = options.serialize || JSON.stringify\r\n\r\n\t\t\tdeserialize = options.deserialize =\r\n\t\t\t\toptions.deserialize || JSON.parse\r\n\t\t\textract = options.extract || function (xhr) {\r\n\t\t\t\tif (xhr.responseText.length || deserialize !== JSON.parse) {\r\n\t\t\t\t\treturn xhr.responseText\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\toptions.method = (options.method || \"GET\").toUpperCase()\r\n\t\toptions.url = parameterizeUrl(options.url, options.data)\r\n\t\tbindData(options, options.data, serialize)\r\n\t\toptions.onload = options.onerror = function (ev) {\r\n\t\t\ttry {\r\n\t\t\t\tev = ev || event\r\n\t\t\t\tvar response = deserialize(extract(ev.target, options))\r\n\t\t\t\tif (ev.type === \"load\") {\r\n\t\t\t\t\tif (options.unwrapSuccess) {\r\n\t\t\t\t\t\tresponse = options.unwrapSuccess(response, ev.target)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isArray(response) && options.type) {\r\n\t\t\t\t\t\tforEach(response, function (res, i) {\r\n\t\t\t\t\t\t\tresponse[i] = new options.type(res)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (options.type) {\r\n\t\t\t\t\t\tresponse = new options.type(response)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeferred.resolve(response)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (options.unwrapError) {\r\n\t\t\t\t\t\tresponse = options.unwrapError(response, ev.target)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeferred.reject(response)\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\tdeferred.reject(e)\r\n\t\t\t\tm.deferred.onerror(e)\r\n\t\t\t} finally {\r\n\t\t\t\tif (options.background !== true) m.endComputation()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tajax(options)\r\n\t\tdeferred.promise = propify(deferred.promise, options.initialValue)\r\n\t\treturn deferred.promise\r\n\t}\r\n\r\n\treturn m\r\n}); // eslint-disable-line\r\n","import { Navbar } from \"./navbar\";\r\nimport { List } from \"./list\";\r\nimport { Button, Input } from \"./button\";\r\nimport { sendData, getData } from \"./sendMessage\";\r\n\r\nexport const m = require(\"mithril\");\r\n(<any>window).m = m;\r\n\r\ntype CustomInputValue = () => string;\r\n\r\nexport type ListItem = {\r\n    id: string,\r\n    title: string,\r\n    callback: () => void\r\n}\r\n\r\nconst Page = {\r\n    controller: function (customInputValue: CustomInputValue) {\r\n        let actionItems = m.prop([]);\r\n        getData(\r\n            'http://localhost:5000/all',\r\n            \"GET\")\r\n            .then(data => { \r\n                let items = data.map(x => { \r\n                    return {\r\n                        description: \"hello1\",\r\n                        open: m.prop(false),\r\n                        title: `${x.name} (${x.subject})`,\r\n                        id: x.id\r\n                    }\r\n                });\r\n                actionItems(items) \r\n                m.redraw();\r\n            })\r\n                .catch(error => console.error(error));\r\n    return {\r\n        value: \"vk\",\r\n        actionItems\r\n    };\r\n},\r\n    view: function (controller: { value: CustomInputValue, actionItems }) {\r\n\r\n        // const sendData = () => {\r\n        // m.request({\r\n        //     method: \"GET\",\r\n        //     body: {\r\n        //         \"socialNetwork\": \"vk\",\r\n        //         \"fromUrl\": controller.value\r\n        //     },\r\n        //     url: \"/new\",\r\n        //     withCredentials: true,\r\n        // })\r\n        //     .then(function (data) {\r\n        //         console.log(\"ye\")\r\n        //     })\r\n        // }\r\n\r\n        return m(\"\",\r\n            Navbar(),\r\n            m(\".uk-container\",\r\n                m(\r\n                    \".flex-inline\",\r\n                    [\r\n                        m(\"input.uk-input\", {\r\n                            oninput: m.withAttr(\"value\", (value) => controller.value = value),\r\n                        }),\r\n                        Button(\"Добавить\", () => {\r\n                            sendData(\r\n                                'http://localhost:5000/new',\r\n                                {\r\n                                    socialNetwork: \"vk\",\r\n                                    fromUrl: controller.value\r\n                                },\r\n                                \"POST\")\r\n                                .then(data => {\r\n                                    debugger;\r\n                                    location.reload();\r\n                                    // debugger;\r\n                                    // controller.actionItems(controller.actionItems())\r\n                                    // m.redraw()\r\n                                }\r\n                                )\r\n                                .catch(error => console.error(error));\r\n                        })\r\n                    ]\r\n                ),\r\n                List(controller.actionItems())\r\n            )\r\n        );\r\n    }\r\n};\r\n\r\nm.mount(document.body, Page);\r\n"]}